[{"path":"http://bbuchsbaum.github.io/rMVPA/articles/CommandLineScripts.html","id":"running-rmvpa-algorithms-from-the-command-line","dir":"Articles","previous_headings":"","what":"Running rMVPA algorithms from the command line","title":"Command-Line Scripts","text":"rMVPA offers two main command-line executable R scripts can used run basic MVPA analyses. goal scripts get users running without requiring write full-blown R programs. Instead, rMVPA can controlled via configuration file specifies data, design information, block structure, model parameters, etc. necessary run MVPA analysis. currently two main scripts: MVPA_Searchlight.R MVPA_Regional.R. two scripts similar inputs capabilities–difference really former runs “searchlight” analysis latter runs MVPA set one regions interest (ROI). example, one wished run MVPA using single large mask covering visual cortex, set Freesrufer-defined ROIs, one opt MVPA_Regional.R.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/articles/CommandLineScripts.html","id":"installing-the-command-line-scripts","dir":"Articles","previous_headings":"","what":"Installing the command-line scripts","title":"Command-Line Scripts","text":"MVPA_Searchlight.R MVPA_Regional.R stored scripts sub-directory R project located : https://github.com/bbuchsbaum/rMVPA course, can scripts, need rMVPA installed. Easiest way open R console type following command, assuming devtools alreeady installed. , first install devtools package. Installing rMVPA package, however, install command line scripts. Instead, manually.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/articles/CommandLineScripts.html","id":"using-wget-to-fetch-scripts-from-github","dir":"Articles","previous_headings":"","what":"Using wget to fetch scripts from Github","title":"Command-Line Scripts","text":"easy way wget command. wget https://raw.githubusercontent.com/bbuchsbaum/rMVPA/master/scripts/MVPA_Searchlight.R wget https://raw.githubusercontent.com/bbuchsbaum/rMVPA/master/scripts/MVPA_Regional.R","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/articles/CommandLineScripts.html","id":"adding-scripts-to-your-bin-folder-and-making-them-executable","dir":"Articles","previous_headings":"","what":"Adding scripts to your bin folder and making them executable","title":"Command-Line Scripts","text":", generally want move bin directory either locally (e.g. /home/username/bin system level /usr/local/bin). e.g. cp MVPA_*R /home/username/bin username name login id. Finally, need make script executable: cd /home/username/bin chmod +x MVPA_Searchlight.R chmod +x MVPA_Regional.R Now can test whether script working (assuming files PATH): MVPA_Searchlight.R --help MVPA_Regional.R --help","code":""},{"path":[]},{"path":"http://bbuchsbaum.github.io/rMVPA/articles/CommandLineScripts.html","id":"setting-up-a-configuration-file","dir":"Articles","previous_headings":"Searchlight analyses with MVPA_Searchlight.R","what":"Setting up a configuration file","title":"Command-Line Scripts","text":"run searchlight analysis need minimum five pieces information. train_data: One NifTI 4D files containing trialwise (.e. one value per voxel per trial) estimates brain activity–often colloquially referrrd “betas” derived single-trial regression analysis yielding series beta estimates. train_design: tabular plain text file (“design file”“) contains minimum ”label” associated image “betas” files. label_column: name column design file holds “labels”. model: name classifier model sda_notune tuning-parameter-free shrinkage discriminant analysis. output: name folder place searchlight classification results. information included configuration file can simple R source code file (e.g. “config.R”) YAML formatted file (e.g. config.yaml). following additional information can also specified: cross_validation: cross-validation method used (see examples, also see “CrossValidation” vignette). mask: name brain mask file indicates set voxels include searchlight. block_column: name column design file encodes block structure experiment. especially important fMRI designs, session divided contiguous “blocks” “runs”. blocks generally “kept together” cross-validaiton based procedures. Thus, important cases put block information usually integer-valued column “train_design” tabular text file. radius: radius millimeters searchlight. default value 8 slightly smaller larger values also reasonable. normalize: whether standardize image training data subtracting mean image dividing standard deviation. successive trialwise estimates vary considerably terms whole-image variance mean, normalizing images can beneficial. hand, whole-brain mean/variance meaningful signal problem, may want normalize way. type: type searchlight. can either “standard” “randomized”. standard searchlight involves estimating classifier model center voel mask; randomized searchlight uses iterative montecarlo resampling approach estimate infromational contribution voxel classification performance. niter: type “randomized” parameter supplies number resampling iterations (default = 16).","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/articles/CommandLineScripts.html","id":"an-example-configuation-file-","dir":"Articles","previous_headings":"","what":"An example configuation file.","title":"Command-Line Scripts","text":"Assume training dataset consisting set 100 single trial “betas” collected five runs concatenated together single file called “betas.nii”. assume classiification goal predict whether presented stimulus one four possible categories: face, scene, object, word. information included design file called “train_design.txt” looks like (first 5 rows ): minimal config.R file. Now run, type following command (assuming MVPA_Searchlight.R PATH): MVPA_Searchlight.R --config config.R","code":"train_design = \"train_design.txt\" train_data = \"betas.nii\" label_column = \"label\" block_column=\"run\" radius=6 mask = \"brain_mask.nii\" mode = \"sda_notune\" output = \"searchlight_analysis\""},{"path":"http://bbuchsbaum.github.io/rMVPA/articles/CrossValidation.html","id":"cross-validation-approaches","dir":"Articles","previous_headings":"","what":"Cross-Validation Approaches","title":"Cross-Validation Schemes","text":"Cross-validation used rMVPA evaluate performance trained classifier. general achieved splitting data training tests sets, fitting model training data evaluating performance test set. methods described used cases one predfined “test set”, rather wants examine test set performance repeatedly analyzing training data .","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/articles/CrossValidation.html","id":"blocked-cross-validation","dir":"Articles","previous_headings":"Cross-Validation Approaches","what":"Blocked Cross-Validation","title":"Cross-Validation Schemes","text":"fMRI analyses images generally acquired number scans “runs” form natural breaks data. Due temporal auto-correlation data, generally good idea train test classifier trials collected run. Therefore, dividing data data blocks cross-validation, natural use scanning “run” means splitting data training test folds. special data structure help set called blocked_cross_validation. need variable indcates block index trial experiment. example, imagine five scans/blocks, 100 images. Now, generate cross-validation samples, use crossval_sample generic function. need give data independent variables, data response variable y. result data.frame (tibble precise) contains row samples necessary conduct complete leave-one-block cross-validation analysis. Notice data.frame contains five variable: ytrain, ytest, train, test .id contains training responses, test responses, training data, test data, integer id variable, respectively. first four variables listelements contain vector- matrix- valued elements cell. Indeed, train test variables S3 classes type resample modelr package. example, access training data first cross-validation fold, can following: toy example, loop cross-validation sets using dplyr rowwise function, fit sda model put fitted model new data.frame.","code":"block_var <- rep(1:5, each=100) cval <- blocked_cross_validation(block_var) print(cval) ## cross-validation: blocked  ##   nobservations:  500  ##   nfolds:  5  ##   block sizes:  100 100 100 100 100 dat <- data.frame(x1=rnorm(500), x2=rnorm(500), x3=rnorm(500)) y <- rep(letters[1:5], length.out=500) sam <- crossval_samples(cval, dat,y) sam ## # A tibble: 5 × 5 ##   ytrain       ytest        train                test                 .id   ##   <named list> <named list> <named list>         <named list>         <chr> ## 1 <chr [400]>  <chr [100]>  <resample [400 x 3]> <resample [100 x 3]> 1     ## 2 <chr [400]>  <chr [100]>  <resample [400 x 3]> <resample [100 x 3]> 2     ## 3 <chr [400]>  <chr [100]>  <resample [400 x 3]> <resample [100 x 3]> 3     ## 4 <chr [400]>  <chr [100]>  <resample [400 x 3]> <resample [100 x 3]> 4     ## 5 <chr [400]>  <chr [100]>  <resample [400 x 3]> <resample [100 x 3]> 5 train_dat <- as.data.frame(sam$train[[1]]) print(train_dat[1:5,]) ##             x1         x2         x3 ## 101 -0.3872136  0.2360958 -1.7055817 ## 102 -0.7854327  0.6289534 -0.8554131 ## 103 -1.0567369  0.4179257 -0.1449016 ## 104 -0.7955414  1.9767585 -0.3244470 ## 105 -1.7562754 -0.5062863 -0.1725649 library(dplyr)  model_fits <- sam %>% rowwise() %>% do({   train_dat <- as.data.frame(.$train)   y_train <- .$ytrain   fit <- sda::sda(as.matrix(train_dat), y_train, verbose=FALSE)   tibble::tibble(fit=list(fit)) })"},{"path":"http://bbuchsbaum.github.io/rMVPA/articles/CrossValidation.html","id":"bootstrap-blocked-cross-validation","dir":"Articles","previous_headings":"Cross-Validation Approaches","what":"Bootstrap Blocked Cross-Validation","title":"Cross-Validation Schemes","text":"blocked cross-validation iterates full dataset , block held test set one cross-validation fold. cases might want cross-validation scheme resamples ful dataset extensively, still respecting block sampling structure fMRI. case can use bootstrap_blocked_cross_validation scheme. Suppose, , integer-valued block variable. Now create bootstrap_blocked_cross_validation 20 bootstrap replications: Now create set new resamples. time instead 5 resamples (one block), 100 resamples (20 block). block used test set 20 times 20 resamples, training data sampled replacement remaining runs.","code":"block_var <- rep(1:5, each=100) cval <- bootstrap_blocked_cross_validation(block_var, nreps=20) print(cval) ## cross-validation: bootstrap blocked  ##   n observations:  500  ##   n bootstrap reps:  20  ##   block sizes:  100 100 100 100 100 dat <- data.frame(x1=rnorm(500), x2=rnorm(500), x3=rnorm(500)) y <- rep(letters[1:5], length.out=500) sam <- crossval_samples(cval, dat,y) sam ## # A tibble: 100 × 5 ##    ytrain      ytest       train                test                 .id   ##    <list>      <list>      <list>               <list>               <chr> ##  1 <chr [400]> <chr [100]> <resample [400 x 3]> <resample [100 x 3]> 001   ##  2 <chr [400]> <chr [100]> <resample [400 x 3]> <resample [100 x 3]> 002   ##  3 <chr [400]> <chr [100]> <resample [400 x 3]> <resample [100 x 3]> 003   ##  4 <chr [400]> <chr [100]> <resample [400 x 3]> <resample [100 x 3]> 004   ##  5 <chr [400]> <chr [100]> <resample [400 x 3]> <resample [100 x 3]> 005   ##  6 <chr [400]> <chr [100]> <resample [400 x 3]> <resample [100 x 3]> 006   ##  7 <chr [400]> <chr [100]> <resample [400 x 3]> <resample [100 x 3]> 007   ##  8 <chr [400]> <chr [100]> <resample [400 x 3]> <resample [100 x 3]> 008   ##  9 <chr [400]> <chr [100]> <resample [400 x 3]> <resample [100 x 3]> 009   ## 10 <chr [400]> <chr [100]> <resample [400 x 3]> <resample [100 x 3]> 010   ## # ℹ 90 more rows"},{"path":"http://bbuchsbaum.github.io/rMVPA/articles/CrossValidation.html","id":"repeated-split-half-resampling-over-blocks","dir":"Articles","previous_headings":"Cross-Validation Approaches","what":"Repeated Split-Half Resampling over Blocks","title":"Cross-Validation Schemes","text":"Another approach repeatedly sampling data respecting block structure encapsulated twofold_blocked_cross_validation resampling scheme. every training resample drawn random half blocks every test set determined half. done nreps times, yielding set split-half (“two fold”) resamples. Note approach requires two blocks since 2 blocks always split data identical way, .e. subsample bootstrap trials within blocks. , resample using crossval_samples supply data set response variable.","code":"block_var <- rep(1:5, each=100) cval <- twofold_blocked_cross_validation(block_var, nreps=20) print(cval) ## twofold cross-validation: blocked  ##   nobservations:  500  ##   nreps:  20  ##   block sizes:  100 100 100 100 100 dat <- data.frame(x1=rnorm(500), x2=rnorm(500), x3=rnorm(500)) y <- rep(letters[1:5], length.out=500) sam <- crossval_samples(cval, dat,y) sam ## # A tibble: 10 × 5 ##    ytrain      ytest       train                test                 .id   ##    <list>      <list>      <list>               <list>               <chr> ##  1 <chr [300]> <chr [200]> <resample [300 x 3]> <resample [200 x 3]> 01    ##  2 <chr [300]> <chr [200]> <resample [300 x 3]> <resample [200 x 3]> 02    ##  3 <chr [300]> <chr [200]> <resample [300 x 3]> <resample [200 x 3]> 03    ##  4 <chr [300]> <chr [200]> <resample [300 x 3]> <resample [200 x 3]> 04    ##  5 <chr [300]> <chr [200]> <resample [300 x 3]> <resample [200 x 3]> 05    ##  6 <chr [300]> <chr [200]> <resample [300 x 3]> <resample [200 x 3]> 06    ##  7 <chr [300]> <chr [200]> <resample [300 x 3]> <resample [200 x 3]> 07    ##  8 <chr [300]> <chr [200]> <resample [300 x 3]> <resample [200 x 3]> 08    ##  9 <chr [300]> <chr [200]> <resample [300 x 3]> <resample [200 x 3]> 09    ## 10 <chr [300]> <chr [200]> <resample [300 x 3]> <resample [200 x 3]> 10"},{"path":"http://bbuchsbaum.github.io/rMVPA/articles/FeatureSelection.html","id":"feature-selection","dir":"Articles","previous_headings":"","what":"Feature Selection","title":"Feature Selection","text":"Feature selection used select subset variables include classification regression model. can useful one many irrelevant features one wants quickly reduce problem manageable size. Alternatively, one wants impose limit total number included features (say, 1000) across set classification tasks (e.g. group subjects) can useful use feature selection running analysis. Note avoid bias, feature selection must incorported cross-validation procedure feature selection carried training fold. automatically done analysis pileplines provided rMVPA.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/articles/FeatureSelection.html","id":"creating-a-feature_selector-object","dir":"Articles","previous_headings":"Feature Selection","what":"Creating a feature_selector object","title":"Feature Selection","text":"use feature selection rMVPA must construct feature_selector instance specifies feature selection method criteria variable inclusion. two ways specificying threshold cutoff value variable inclusion: first, called top_k, selects features including top k important features according feature importance algorithm; second, called top_p selects feature including proportion p variables ranking feature importance. Thus, p .1, include top 10% features. First, demonstrate setting creatinga feature_selector using top_k method, using k=10, univariate F-test feature ranking: apply feature selection data, follows: Now select feature using proprtion cutoff using top_p option.","code":"fsel <- feature_selector(method=\"FTest\",cutoff_type = \"top_k\", cutoff_value = 10) fsel ## $cutoff_type ## [1] \"top_k\" ##  ## $cutoff_value ## [1] 10 ##  ## attr(,\"class\") ## [1] \"FTest\"            \"feature_selector\" \"list\" ## create a dependent variable. Y <- factor(rep(letters[1:4], 25))  ## create a feature matrix X <- matrix(rnorm(100*100), 100, 100)  ## select_features returns a logical vector with selected features as TRUE and otherwise FALSE res <- select_features(fsel,X,Y)  ## the total number of TRUE values should equal the cutoff_value of 10. print(sum(res)) ## [1] 10 fsel <- feature_selector(method=\"FTest\",cutoff_type = \"top_p\", cutoff_value = .1) res <- select_features(fsel,X,Y) ## selecting features via FTest ## cutoff type top_p ## cutoff value 0.1 ## retaining 10 features in matrix with 100 columns ## the total number of TRUE values should equal the cutoff_value of 10. print(sum(res)/ncol(X)) ## [1] 0.1"},{"path":[]},{"path":"http://bbuchsbaum.github.io/rMVPA/articles/RSA.html","id":"generate-a-volumetric-dataset-with-100-observations-and-an-external-model-rsa-dissimilarity-matrix","dir":"Articles","previous_headings":"Representational Similarity Analysis","what":"Generate a volumetric dataset with 100 observations and an external “model” RSA dissimilarity matrix","title":"Represenational Similarity Analysis","text":"generate dataset use gen_sample_dataset function. creating 4-dimensional neuroimaging dataset, 6--6--6 spatial dimensions 80 observations 4th dimension. 80 observations divided 4 blocks, consisting 20 trials. run RSA external model matrix, need create rsa_design object. First generate sample dataset 80 trials follows. Now create external dissimilarity matrix number trials fMRI dataset. create rsa_design object rsa_model object. Finally, run searchlight analysis 4mm radius using pearson correlation metric compare similarity external model matrix (Dmat) return object result contains list NeuroVol objects, one model matrix. , since one external model matrix, Dmat one element returned list. Let’s rerun using Spearman correlation instead pearson correlation compare brain vs model matrices.","code":"dataset <- gen_sample_dataset(D=c(20,20,8), nobs = 80, blocks=4) Dmat <- dist(matrix(rnorm(80*100), 80, 100)) rsades <- rsa_design(~ Dmat, list(Dmat=Dmat), block_var=factor(dataset$design$block_var))  ## use 'matrix' instead of 'dist' Dmat2 <- as.matrix(Dmat)  rsades2 <- rsa_design(~ Dmat2, list(Dmat=Dmat2), block_var=factor(dataset$design$block_var))  dset <- mvpa_dataset(dataset$dataset$train_data, mask=dataset$dataset$mask)  ### if we had a file called \"betas.nii.gz\" and associated mask, \"mask.nii.gz\" we would do as follows: ### traindat <- neuroim2::read_vector(\"betas.nii.gz\") ### mask <- neuroim2::read_vector(\"mask.nii.gz\")    ## dset <- mvpa_dataset(traindat, mask=mask)  rsamod <- rsa_model(dset, rsades) result <- run_searchlight(rsamod, radius=4, method=\"standard\",regtype=\"pearson\") ## INFO [2024-04-22 15:32:42] running standard RSA searchlight with 4 radius  ## INFO [2024-04-22 15:32:42] creating standard searchlight ## INFO [2024-04-22 15:32:42] running standard searchlight iterator rsamod2 <- rsa_model(dset, rsades2) result2 <- run_searchlight(rsamod2, radius=4, method=\"standard\",regtype=\"pearson\") ## INFO [2024-04-22 15:32:46] running standard RSA searchlight with 4 radius  ## INFO [2024-04-22 15:32:46] creating standard searchlight ## INFO [2024-04-22 15:32:46] running standard searchlight iterator range(result$Dmat) ## [1] -0.0438099  0.0252217 range(result2$Dmat) ## [1] -0.0438099  0.0252217 result ## $Dmat ## NeuroVol ##   Type           : DenseNeuroVol  ##   Dimension      : 20 20 8  ##   Spacing        : 1  X  1  X  1  ##   Origin         : 0  X  0  X  0  ##   Axes           : Left-to-Right Posterior-to-Anterior Inferior-to-Superior ### we can save the result to disk, as follows:  ## write_vol(result$Dmat, \"RSA_Dmat.nii.gz\") result <- run_searchlight(rsamod, radius=4, method=\"standard\",regtype=\"spearman\") ## INFO [2024-04-22 15:32:49] running standard RSA searchlight with 4 radius  ## INFO [2024-04-22 15:32:49] creating standard searchlight ## INFO [2024-04-22 15:32:49] running standard searchlight iterator range(result$Dmat) ## [1] -0.04623480  0.03528682"},{"path":"http://bbuchsbaum.github.io/rMVPA/articles/Regional_Analysis.html","id":"mvpa-analysis-on-regions-of-interest","dir":"Articles","previous_headings":"","what":"MVPA Analysis on Regions of Interest","title":"Regional Analysis","text":"one pre-defined regions interests (ROIs) can use rMVPA run clasisifation/regression model region, yielding peformance measures region.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/articles/Regional_Analysis.html","id":"generate-a-volumetric-dataset-with-100-observations-and-two-classes","dir":"Articles","previous_headings":"MVPA Analysis on Regions of Interest","what":"Generate a volumetric dataset with 100 observations and two classes","title":"Regional Analysis","text":"generate dataset use gen_sample_dataset function. creating 4-dimensional neuroimaging dataset, 6--6--6 spatial dimensions 80 observations 4th dimension. 80 observations divided 4 blocks, consisting 20 trials. generated y variable factor 2 levels (‘’ ‘b’). gen_sample_dataset function creates list two elements: mvpa_dataset object (dataset) mvpa_design object (design). first contains information data second contains information experimental design. Now generate arbitrary set ROIs assigning voxel input mask value ranging 1 3. region_mask volume now defines set three ROIs ROI defined integer value. Next, can run classification/regression model within ROI using run_regional function: run_regional produces several output values, including performance_table, includes cross-validated performance metrics ROI: get fine-grained information, individual predictions ROI trial included prediction_table:","code":"dset <- gen_sample_dataset(D=c(6,6,6), nobs = 80, blocks=4, nlevels=2) print(dset) ## $dataset ## $train_data ## DenseNeuroVec  ##   Type           : DenseNeuroVec  ##   Dimension      : 6 6 6 80  ##   Spacing        : 1  X  1  X  1  ##   Origin         : 0  X  0  X  0  ##   Axes           : Left-to-Right Posterior-to-Anterior Inferior-to-Superior  ##   Coordinate Transform : 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1  ##  ## $test_data ## NULL ##  ## $mask ## NeuroVol ##   Type           : LogicalNeuroVol  ##   Dimension      : 6 6 6  ##   Spacing        : 1  X  1  X  1  ##   Origin         : 0  X  0  X  0  ##   Axes           : Left-to-Right Posterior-to-Anterior Inferior-to-Superior  ##  ## attr(,\"class\") ## [1] \"mvpa_image_dataset\" \"mvpa_dataset\"       \"list\"               ##  ## $design ## mvpa_design:  ##   training observations:  80  ##   training levels:  a b  ##   no test observations.  ##   training response:   Factor w/ 2 levels \"a\",\"b\": 2 1 1 2 2 1 2 1 1 1 ...  ##   block var:   int [1:80] 1 1 1 1 1 1 1 1 1 1 ... mask <- dset$dataset$mask nvox <- sum(mask)  region_mask <- neuroim2::NeuroVol(sample(1:3,replace=TRUE,size=nvox), space(mask), indices=which(mask>0)) table(region_mask) ## region_mask ##   0   1   2   3  ## 123  30  33  30 mod <- load_model(\"sda\") tune_grid <- data.frame(lambda=.01, diagonal=FALSE) cval <- blocked_cross_validation(dset$design$block_var) mspec <- mvpa_model(mod, dataset=dset$dataset, design=dset$design, tune_grid=tune_grid,crossval=cval) res <- run_regional(mspec,region_mask) print(res$performance_table) ## # A tibble: 3 × 3 ##   roinum Accuracy     AUC ##    <int>    <dbl>   <dbl> ## 1      1    0.488 -0.0300 ## 2      2    0.525  0.0437 ## 3      3    0.588  0.149 print(res$prediction_table) ## # A tibble: 240 × 8 ## # Rowwise:  ##    .rownum roinum observed pobserved predicted correct  prob_a   prob_b ##      <int>  <int> <fct>        <dbl> <chr>     <lgl>     <dbl>    <dbl> ##  1       1      1 b         0.000426 a         FALSE   1.00    0.000426 ##  2       2      1 a         0.00602  b         FALSE   0.00602 0.994    ##  3       3      1 a         0.988    a         TRUE    0.988   0.0119   ##  4       4      1 b         0.0146   a         FALSE   0.985   0.0146   ##  5       5      1 b         0.0231   a         FALSE   0.977   0.0231   ##  6       6      1 a         0.990    a         TRUE    0.990   0.0103   ##  7       7      1 b         0.997    b         TRUE    0.00264 0.997    ##  8       8      1 a         0.0454   b         FALSE   0.0454  0.955    ##  9       9      1 a         0.0113   b         FALSE   0.0113  0.989    ## 10      10      1 a         0.881    a         TRUE    0.881   0.119    ## # ℹ 230 more rows"},{"path":[]},{"path":"http://bbuchsbaum.github.io/rMVPA/articles/Searchlight_Analysis.html","id":"generate-a-volumetric-dataset-with-100-observations-and-two-classes","dir":"Articles","previous_headings":"Searchlight Analysis","what":"Generate a volumetric dataset with 100 observations and two classes","title":"Searchlight Analysis","text":"generate dataset use gen_sample_dataset function. creating 4-dimensional neuroimaging dataset, 6--6--6 spatial dimensions 80 observations 4th dimension. 80 observations divided 4 blocks, consisting 20 trials. generated y variable factor 2 levels (‘’ ‘b’). gen_sample_dataset function creates list two elements: mvpa_dataset object (dataset) mvpa_design object (design). first contains information data second contains information experimental design.","code":"dataset <- gen_sample_dataset(D=c(6,6,6), nobs = 80, blocks=4, nlevels=2) print(dataset) ## $dataset ## $train_data ## DenseNeuroVec  ##   Type           : DenseNeuroVec  ##   Dimension      : 6 6 6 80  ##   Spacing        : 1  X  1  X  1  ##   Origin         : 0  X  0  X  0  ##   Axes           : Left-to-Right Posterior-to-Anterior Inferior-to-Superior  ##   Coordinate Transform : 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1  ##  ## $test_data ## NULL ##  ## $mask ## NeuroVol ##   Type           : LogicalNeuroVol  ##   Dimension      : 6 6 6  ##   Spacing        : 1  X  1  X  1  ##   Origin         : 0  X  0  X  0  ##   Axes           : Left-to-Right Posterior-to-Anterior Inferior-to-Superior  ##  ## attr(,\"class\") ## [1] \"mvpa_image_dataset\" \"mvpa_dataset\"       \"list\"               ##  ## $design ## mvpa_design:  ##   training observations:  80  ##   training levels:  a b  ##   no test observations.  ##   training response:   Factor w/ 2 levels \"a\",\"b\": 2 1 1 2 2 1 2 1 1 1 ...  ##   block var:   int [1:80] 1 1 1 1 1 1 1 1 1 1 ..."},{"path":"http://bbuchsbaum.github.io/rMVPA/articles/Searchlight_Analysis.html","id":"create-a-cross-validation-object-using-a-pre-defined-blocking-variable-","dir":"Articles","previous_headings":"Searchlight Analysis","what":"Create a cross-validation object using a pre-defined blocking variable.","title":"Searchlight Analysis","text":"MVPA analyses involve collection fMRI data series scanning runs, “blocks”. Due intra-block serial correlations, makes sense take advantage block structure cross-validation. words, want train classifier k-1 blocks test set trials k held blocks. form leave-one-group-cross-validation, encapsulated blocked_cross_validation function.","code":"block <- dataset$design$block_var crossval <- blocked_cross_validation(block) crossval ## cross-validation: blocked  ##   nobservations:  80  ##   nfolds:  4  ##   block sizes:  20 20 20 20"},{"path":"http://bbuchsbaum.github.io/rMVPA/articles/Searchlight_Analysis.html","id":"construct-an-mvpa_model-object-with-a-shrinkage-discriminant-analysis-classifier-sda_notune","dir":"Articles","previous_headings":"Searchlight Analysis","what":"Construct an mvpa_model object with a Shrinkage Discriminant Analysis classifier (sda_notune)","title":"Searchlight Analysis","text":"“sda_notune” model sda model lambda parameter estimated training data. See documentation sda package package.","code":"sda_model <- load_model(\"sda_notune\")  model <- mvpa_model(model=sda_model, dataset=dataset$dataset, design=dataset$design, crossval=crossval) model ## mvpa_model object.  ## model:  sda_notune  ## model type:  classification  ## cross-validation: blocked  ##   nobservations:  80  ##   nfolds:  4  ##   block sizes:  20 20 20 20  ## mvpa_dataset:  ##   train_data: DenseNeuroVec  ##   Type           : DenseNeuroVec  ##   Dimension      : 6 6 6 80  ##   Spacing        : 1  X  1  X  1  ##   Origin         : 0  X  0  X  0  ##   Axes           : Left-to-Right Posterior-to-Anterior Inferior-to-Superior  ##   Coordinate Transform : 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1  ##   test_data: none.  ##   mask areas:  1/93  ##   mask cardinality:  93  ## mvpa_design:  ##   training observations:  80  ##   training levels:  a b  ##   no test observations.  ##   training response:   Factor w/ 2 levels \"a\",\"b\": 2 1 1 2 2 1 2 1 1 1 ...  ##   block var:   int [1:80] 1 1 1 1 1 1 1 1 1 1 ..."},{"path":"http://bbuchsbaum.github.io/rMVPA/articles/Searchlight_Analysis.html","id":"run-a-standard-searchlight-analysis","dir":"Articles","previous_headings":"Searchlight Analysis","what":"Run a standard searchlight analysis","title":"Searchlight Analysis","text":"output run_searchlight list image volumes containing performance measures spherical searchlight. two-class classification problem, three output measures: Accuracy AUC (AUC .5 subtracted , centered 0 rather .5). Accuracy raw cross-validated accuracy measure centroid AUC area curve statistic. radius argument indicates radius mm spherical searchlight. Finally, method indicates searchlight scheme, can standard randomized. See information randomized searchlight.","code":"result <- run_searchlight(model, radius=4, method=\"standard\") ## INFO [2024-04-22 15:32:57] model is: sda_notune ## INFO [2024-04-22 15:32:57] running standard searchlight with 4 radius  ## INFO [2024-04-22 15:32:57] creating standard searchlight ## INFO [2024-04-22 15:32:57] running standard searchlight iterator ## INFO [2024-04-22 15:32:57] mvpa_iterate: compute analysis for batch 1 ... ## INFO [2024-04-22 15:32:59] mvpa_iterate: compute analysis for batch 2 ... ## INFO [2024-04-22 15:33:00] mvpa_iterate: compute analysis for batch 3 ... ## INFO [2024-04-22 15:33:01] mvpa_iterate: compute analysis for batch 4 ... ## INFO [2024-04-22 15:33:02] mvpa_iterate: compute analysis for batch 5 ... ## INFO [2024-04-22 15:33:04] mvpa_iterate: compute analysis for batch 6 ... ## INFO [2024-04-22 15:33:05] mvpa_iterate: compute analysis for batch 7 ... ## INFO [2024-04-22 15:33:06] mvpa_iterate: compute analysis for batch 8 ... ## INFO [2024-04-22 15:33:08] mvpa_iterate: compute analysis for batch 9 ... ## INFO [2024-04-22 15:33:09] mvpa_iterate: compute analysis for batch 10 ... result ## $Accuracy ## NeuroVol ##   Type           : DenseNeuroVol  ##   Dimension      : 6 6 6  ##   Spacing        : 1  X  1  X  1  ##   Origin         : 0  X  0  X  0  ##   Axes           : Left-to-Right Posterior-to-Anterior Inferior-to-Superior  ##  ## $AUC ## NeuroVol ##   Type           : DenseNeuroVol  ##   Dimension      : 6 6 6  ##   Spacing        : 1  X  1  X  1  ##   Origin         : 0  X  0  X  0  ##   Axes           : Left-to-Right Posterior-to-Anterior Inferior-to-Superior hist(result$AUC)"},{"path":"http://bbuchsbaum.github.io/rMVPA/articles/Searchlight_Analysis.html","id":"run-a-randomized-searchlight-analysis","dir":"Articles","previous_headings":"","what":"Run a randomized searchlight analysis","title":"Searchlight Analysis","text":"randomized searchlight analysis iterative procedure searchlight regions sampled without replacement voxel set. classification analysis run region, result recorded center voxel voxels region. done niter times, iteration involves exhaustive sampling voxel set. performance voxel average performance set analyses given voxel included feature. result similar standard searchlight procedure, emphasizes contribution given voxel across different local contexts classification performance. principle offer slightly better spatial localization standard searchlight. randomized searchlight procedure can also faster, total number estimated models function nvoxels/radius * niter, smaller nvoxels many choices radius niter.","code":"result <- run_searchlight(model, radius=4, method=\"randomized\", niter=8) ## INFO [2024-04-22 15:33:11] model is: sda_notune ## INFO [2024-04-22 15:33:11] running randomized searchlight with 4 radius and 8 iterations ## INFO [2024-04-22 15:33:11] searchlight iteration: 1 ## INFO [2024-04-22 15:33:11] mvpa_iterate: compute analysis for batch 1 ... ## INFO [2024-04-22 15:33:11] mvpa_iterate: compute analysis for batch 2 ... ## INFO [2024-04-22 15:33:11] mvpa_iterate: compute analysis for batch 3 ... ## INFO [2024-04-22 15:33:11] searchlight iteration: 2 ## INFO [2024-04-22 15:33:11] mvpa_iterate: compute analysis for batch 1 ... ## INFO [2024-04-22 15:33:12] mvpa_iterate: compute analysis for batch 2 ... ## INFO [2024-04-22 15:33:12] searchlight iteration: 3 ## INFO [2024-04-22 15:33:12] mvpa_iterate: compute analysis for batch 1 ... ## INFO [2024-04-22 15:33:12] mvpa_iterate: compute analysis for batch 2 ... ## INFO [2024-04-22 15:33:12] searchlight iteration: 4 ## INFO [2024-04-22 15:33:12] mvpa_iterate: compute analysis for batch 1 ... ## INFO [2024-04-22 15:33:13] mvpa_iterate: compute analysis for batch 2 ... ## INFO [2024-04-22 15:33:13] searchlight iteration: 5 ## INFO [2024-04-22 15:33:13] mvpa_iterate: compute analysis for batch 1 ... ## INFO [2024-04-22 15:33:13] mvpa_iterate: compute analysis for batch 2 ... ## INFO [2024-04-22 15:33:14] mvpa_iterate: compute analysis for batch 3 ... ## INFO [2024-04-22 15:33:14] searchlight iteration: 6 ## INFO [2024-04-22 15:33:14] mvpa_iterate: compute analysis for batch 1 ... ## INFO [2024-04-22 15:33:14] mvpa_iterate: compute analysis for batch 2 ... ## INFO [2024-04-22 15:33:14] searchlight iteration: 7 ## INFO [2024-04-22 15:33:14] mvpa_iterate: compute analysis for batch 1 ... ## INFO [2024-04-22 15:33:15] mvpa_iterate: compute analysis for batch 2 ... ## INFO [2024-04-22 15:33:15] mvpa_iterate: compute analysis for batch 3 ... ## INFO [2024-04-22 15:33:15] searchlight iteration: 8 ## INFO [2024-04-22 15:33:15] mvpa_iterate: compute analysis for batch 1 ... ## INFO [2024-04-22 15:33:15] mvpa_iterate: compute analysis for batch 2 ... ## INFO [2024-04-22 15:33:16] mvpa_iterate: compute analysis for batch 3 ... ## INFO [2024-04-22 15:33:16] mvpa_iterate: compute analysis for batch 4 ... ## INFO [2024-04-22 15:33:16] number of models fit: 17 result ## $Accuracy ## NeuroVol ##   Type           : DenseNeuroVol  ##   Dimension      : 6 6 6  ##   Spacing        : 1  X  1  X  1  ##   Origin         : 0  X  0  X  0  ##   Axes           : Left-to-Right Posterior-to-Anterior Inferior-to-Superior  ##  ## $AUC ## NeuroVol ##   Type           : DenseNeuroVol  ##   Dimension      : 6 6 6  ##   Spacing        : 1  X  1  X  1  ##   Origin         : 0  X  0  X  0  ##   Axes           : Left-to-Right Posterior-to-Anterior Inferior-to-Superior hist(result$AUC)"},{"path":"http://bbuchsbaum.github.io/rMVPA/articles/Searchlight_Analysis.html","id":"using-different-classifiers","dir":"Articles","previous_headings":"","what":"Using different classifiers","title":"Searchlight Analysis","text":"classifiers available caret package can used (theory) searchlight analysis. example, can run analysis using linear support vector (svmLinear) machine follows: use random forest classifier. fix tuning parameter mtry known value, supply tune_grid argument mvpa_model function. , set mtry 2. Sinc ethere one value, means parameter fixed. supply grid values, paramter tuned searchlight sample. Since parameter tuning costly terms computing time, recommended approach unless one great deal computing power one running searchlight small mask. specify range values mtry tuning parameter. case, supplying tune_reps argument mvpa_model control number resamples used tune model parameters. default 10, speed execution time reducing 2. general, resamples required reliably estimate optimal tuning parameters. means whole-brain searchlight, parameter tuning generally impractical. classifier sda_notune good choice searchlight analyses, since “works well” default tuning parameters.","code":"svm_model <- load_model(\"svmLinear\")  model <- mvpa_model(model=svm_model, dataset=dataset$dataset, design=dataset$design, crossval=crossval) result_svm <- run_searchlight(model, radius=4, method=\"randomized\", niter=2) rf_model <- load_model(\"rf\")  model <- mvpa_model(model=rf_model, dataset=dataset$dataset, design=dataset$design, crossval=crossval, tune_grid=data.frame(mtry=2)) result_rf <- run_searchlight(model, radius=4, method=\"randomized\", niter=2) ## INFO [2024-04-22 15:33:17] model is: rf ## INFO [2024-04-22 15:33:17] running randomized searchlight with 4 radius and 2 iterations ## INFO [2024-04-22 15:33:17] searchlight iteration: 1 ## INFO [2024-04-22 15:33:17] mvpa_iterate: compute analysis for batch 1 ... ## INFO [2024-04-22 15:33:17] mvpa_iterate: compute analysis for batch 2 ... ## INFO [2024-04-22 15:33:18] mvpa_iterate: compute analysis for batch 3 ... ## INFO [2024-04-22 15:33:18] mvpa_iterate: compute analysis for batch 4 ... ## INFO [2024-04-22 15:33:18] searchlight iteration: 2 ## INFO [2024-04-22 15:33:18] mvpa_iterate: compute analysis for batch 1 ... ## INFO [2024-04-22 15:33:18] mvpa_iterate: compute analysis for batch 2 ... ## INFO [2024-04-22 15:33:19] mvpa_iterate: compute analysis for batch 3 ... ## INFO [2024-04-22 15:33:19] number of models fit: 5 grid <- data.frame(mtry=c(2,4,6,8)) model2 <- mvpa_model(model=rf_model, dataset=dataset$dataset, design=dataset$design, crossval=crossval, tune_grid=grid, tune_reps=2)  result_rf_tuned <- run_searchlight(model2, radius=6, method=\"randomized\", niter=1)"},{"path":"http://bbuchsbaum.github.io/rMVPA/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bradley Buchsbaum. Author, maintainer.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Buchsbaum B (2024). rMVPA: Multivoxel Pattern Analysis R. R package version 0.1.2, http://bbuchsbaum.github.io/rMVPA/.","code":"@Manual{,   title = {rMVPA: Multivoxel Pattern Analysis in R},   author = {Bradley Buchsbaum},   year = {2024},   note = {R package version 0.1.2},   url = {http://bbuchsbaum.github.io/rMVPA/}, }"},{"path":[]},{"path":[]},{"path":"http://bbuchsbaum.github.io/rMVPA/index.html","id":"introduction","dir":"","previous_headings":"Multivoxel Pattern Analysis in R","what":"Introduction","title":"Multivoxel Pattern Analysis in R","text":"rMVPA R library multivariate pattern analysis neuroimaging data. goal library make MVPA analyses easy. can used programmatically within R using command line interface. ‘rMVPA’ leverages ‘caret’ library underlying machine learning interface. rMVPA provides infrastructure conducting machine learning analyses neuroimaging data. Documentation vignettes: https://bbuchsbaum.github.io/rMVPA/","code":""},{"path":[]},{"path":"http://bbuchsbaum.github.io/rMVPA/index.html","id":"using-devtools","dir":"","previous_headings":"Multivoxel Pattern Analysis in R","what":"Using devtools","title":"Multivoxel Pattern Analysis in R","text":"install rMVPA within R, use devtools function install_github. need development version neuroim2 well. within R:","code":"#library(devtools) install_github(\"bbuchsbaum/neuroim2\") install_github(\"bbuchsbaum/rMVPA\")"},{"path":"http://bbuchsbaum.github.io/rMVPA/index.html","id":"using-git-from-the-command-line","dir":"","previous_headings":"Multivoxel Pattern Analysis in R","what":"Using git from the command line","title":"Multivoxel Pattern Analysis in R","text":"","code":"git clone git@github.com:bbuchsbaum/rMVPA.git R CMD install rMVPA"},{"path":"http://bbuchsbaum.github.io/rMVPA/index.html","id":"optionally-install-command-line-scripts-for-coding-free-mvpa-analysis","dir":"","previous_headings":"Multivoxel Pattern Analysis in R","what":"Optionally install command line scripts for “coding-free” MVPA analysis:","title":"Multivoxel Pattern Analysis in R","text":"wget https://raw.githubusercontent.com/bbuchsbaum/rMVPA/master/scripts/MVPA_Searchlight.R wget https://raw.githubusercontent.com/bbuchsbaum/rMVPA/master/scripts/MVPA_Regional.R , move files folder PATH make executable: chmod +x MVPA_Searchlight.R chmod +x MVPA_Regional.R","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/as_roi.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an object to an ROIVolume or ROISurface object — as_roi","title":"Convert an object to an ROIVolume or ROISurface object — as_roi","text":"as_roi function generic function converts provided object ROIVolume ROISurface object, given associated data object additional arguments.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/as_roi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an object to an ROIVolume or ROISurface object — as_roi","text":"","code":"as_roi(obj, data, ...)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/as_roi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an object to an ROIVolume or ROISurface object — as_roi","text":"obj object converted. data associated data object used conversion process. ... Additional arguments passed function.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/as_roi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an object to an ROIVolume or ROISurface object — as_roi","text":"ROIVolume ROISurface object.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/binary_classification_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Classification results for binary outcome — binary_classification_result","title":"Classification results for binary outcome — binary_classification_result","text":"Constructs binary classification result object based observed predicted values, well optional parameters.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/binary_classification_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classification results for binary outcome — binary_classification_result","text":"","code":"binary_classification_result(   observed,   predicted,   probs,   testind = NULL,   test_design = NULL,   predictor = NULL )"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/binary_classification_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classification results for binary outcome — binary_classification_result","text":"observed vector observed true values. predicted vector predicted values. probs matrix predicted probabilities, one column per level. testind row indices test observations (optional). test_design optional design test data. predictor optional predictor object.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/binary_classification_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classification results for binary outcome — binary_classification_result","text":"binary classification result object, class attribute set \"binary_classification_result\".","code":""},{"path":[]},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/classification_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a classification_result instance — classification_result","title":"Create a classification_result instance — classification_result","text":"Constructs classification result object based observed predicted values, well optional parameters.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/classification_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a classification_result instance — classification_result","text":"","code":"classification_result(   observed,   predicted,   probs,   testind = NULL,   test_design = NULL,   predictor = NULL )"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/classification_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a classification_result instance — classification_result","text":"observed vector observed true values. predicted vector predicted values. probs matrix predicted probabilities, one column per level. testind row indices test observations (optional). test_design optional design test data. predictor optional predictor object.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/classification_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a classification_result instance — classification_result","text":"classification result object, can one : regression_result,  binary_classification_result, multiway_classification_result.","code":""},{"path":[]},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/classification_result.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a classification_result instance — classification_result","text":"","code":"# A vector of observed values yobs <- factor(rep(letters[1:4], 5))  # Predicted probabilities probs <- data.frame(a = runif(1:20), b = runif(1:20), c = runif(1:20), d = runif(1:20)) probs <- sweep(probs, 1, rowSums(probs), \"/\")  # Get the max probability per row and use this to determine the predicted class maxcol <- max.col(probs) predicted <- levels(yobs)[maxcol]  # Construct a classification result cres <- classification_result(yobs, predicted, probs)  # Compute default performance measures (Accuracy, AUC) performance(cres) #>    Accuracy         AUC  #>  0.20000000 -0.02666667"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/coalesce_join2.html","id":null,"dir":"Reference","previous_headings":"","what":"Coalesce Join Two Data Frames — coalesce_join2","title":"Coalesce Join Two Data Frames — coalesce_join2","text":"function performs specified type join two data frames coalesces joined columns based common column names.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/coalesce_join2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coalesce Join Two Data Frames — coalesce_join2","text":"","code":"coalesce_join2(   x,   y,   by = NULL,   suffix = c(\".x\", \".y\"),   join = dplyr::full_join,   ... )"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/coalesce_join2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coalesce Join Two Data Frames — coalesce_join2","text":"x data frame joined. y second data frame joined. character vector variables join . NULL (default), function use common column names 'x' 'y'. suffix character vector length 2, specifying suffixes used making unique common column names 'x' 'y'. default c(\".x\", \".y\"). join join function used joining data frames. default dplyr::full_join. ... Additional arguments passed join function.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/coalesce_join2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coalesce Join Two Data Frames — coalesce_join2","text":"data frame resulting specified join operation coalesced columns.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/combine_prediction_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine prediction tables — combine_prediction_tables","title":"Combine prediction tables — combine_prediction_tables","text":"Combines multiple prediction tables (e.g., different models regions) single table. Supports weighted combination collapsing regions.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/combine_prediction_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine prediction tables — combine_prediction_tables","text":"","code":"combine_prediction_tables(   predtabs,   wts = rep(1, length(predtabs)),   collapse_regions = FALSE )"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/combine_prediction_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine prediction tables — combine_prediction_tables","text":"predtabs list prediction tables (data frames) combined. wts vector weights, length predtabs. Default equal weights. collapse_regions logical value; TRUE, regions collapsed final prediction table.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/combine_prediction_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine prediction tables — combine_prediction_tables","text":"combined prediction table (data frame).","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/combine_prediction_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine prediction tables — combine_prediction_tables","text":"","code":"# Create example prediction tables observed = factor(sample(letters[1:2], 10, replace = TRUE)) predtab1 <- data.frame(.rownum = 1:10,                        roinum = rep(1, 10),                        observed = observed,                        prob_A = runif(10),                        prob_B = runif(10)) predtab2 <- data.frame(.rownum = 1:10,                        roinum = rep(2, 10),                        observed = observed,                        prob_A = runif(10),                        prob_B = runif(10))  # Combine the tables combined_table <- combine_prediction_tables(list(predtab1, predtab2)) #> Warning: `funs()` was deprecated in dplyr 0.8.0. #> ℹ Please use a list of either functions or lambdas: #>  #> # Simple named list: list(mean = mean, median = median) #>  #> # Auto named with `tibble::lst()`: tibble::lst(mean, median) #>  #> # Using lambdas list(~ mean(., trim = .2), ~ median(., na.rm = TRUE)) #> ℹ The deprecated feature was likely used in the rMVPA package. #>   Please report the issue to the authors."},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/combine_randomized.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine randomized classifier results — combine_randomized","title":"Combine randomized classifier results — combine_randomized","text":"function combines randomized classifier results good results data frame normalizes performance matrix number instances voxel index.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/combine_randomized.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine randomized classifier results — combine_randomized","text":"","code":"combine_randomized(model_spec, good_results, bad_results)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/combine_randomized.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine randomized classifier results — combine_randomized","text":"model_spec list containing model specification. good_results data frame containing successful classifier results. bad_results data frame containing unsuccessful classifier results.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/combine_randomized.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine randomized classifier results — combine_randomized","text":"list containing combined normalized performance matrix along information dataset.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/combine_regional_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine Regional Results — combine_regional_results","title":"Combine Regional Results — combine_regional_results","text":"function combines regional results list single data frame.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/combine_regional_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Regional Results — combine_regional_results","text":"","code":"combine_regional_results(results)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/combine_regional_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Regional Results — combine_regional_results","text":"results list regional results.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/combine_regional_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine Regional Results — combine_regional_results","text":"data frame combined regional results.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/combine_regional_results.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Combine Regional Results — combine_regional_results","text":"function used combine regional results list single data frame. handles factor non-factor observed values creates combined data frame corresponding columns.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/combine_rsa_standard.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine RSA standard classifier results — combine_rsa_standard","title":"Combine RSA standard classifier results — combine_rsa_standard","text":"function combines RSA standard classifier results good results data frame binding performance rows together.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/combine_rsa_standard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine RSA standard classifier results — combine_rsa_standard","text":"","code":"combine_rsa_standard(model_spec, good_results, bad_results)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/combine_rsa_standard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine RSA standard classifier results — combine_rsa_standard","text":"model_spec list containing model specification. good_results data frame containing successful classifier results. bad_results data frame containing unsuccessful classifier results.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/combine_rsa_standard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine RSA standard classifier results — combine_rsa_standard","text":"list containing combined performance matrix along information dataset.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/combine_standard.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine standard classifier results — combine_standard","title":"Combine standard classifier results — combine_standard","text":"function combines standard classifier results good results data frame binding performance rows together optionally computes observed probabilities.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/combine_standard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine standard classifier results — combine_standard","text":"","code":"combine_standard(model_spec, good_results, bad_results)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/combine_standard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine standard classifier results — combine_standard","text":"model_spec list containing model specification. good_results data frame containing successful classifier results. bad_results data frame containing unsuccessful classifier results.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/combine_standard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine standard classifier results — combine_standard","text":"list containing combined performance matrix, observed probabilities, information dataset.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/combine_vector_rsa_standard.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine Vector RSA standard classifier results — combine_vector_rsa_standard","title":"Combine Vector RSA standard classifier results — combine_vector_rsa_standard","text":"function combines Vector RSA standard classifier results good results data frame binding performance rows together.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/combine_vector_rsa_standard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Vector RSA standard classifier results — combine_vector_rsa_standard","text":"","code":"combine_vector_rsa_standard(model_spec, good_results, bad_results)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/combine_vector_rsa_standard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Vector RSA standard classifier results — combine_vector_rsa_standard","text":"model_spec list containing model specification. good_results data frame containing successful classifier results. bad_results data frame containing unsuccessful classifier results.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/combine_vector_rsa_standard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine Vector RSA standard classifier results — combine_vector_rsa_standard","text":"list containing combined performance matrix along information dataset.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/comp_perf.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile performance results and generate volumetric results — comp_perf","title":"Compile performance results and generate volumetric results — comp_perf","text":"function compiles performance results regional MVPA analysis generates volumetric results based region_mask.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/comp_perf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile performance results and generate volumetric results — comp_perf","text":"","code":"comp_perf(results, region_mask)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/comp_perf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile performance results and generate volumetric results — comp_perf","text":"results list containing results regional MVPA analysis. region_mask mask representing different regions brain image.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/comp_perf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile performance results and generate volumetric results — comp_perf","text":"list containing:   * vols: list volumetric results performance metric.   * perf_mat: data frame containing compiled performance results added 'roinum' column.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/compute_performance.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Performance Metrics for Classification/Regression Results — compute_performance","title":"Compute Performance Metrics for Classification/Regression Results — compute_performance","text":"function delegates calculation performance metrics classification/regression results appropriate method based input object's class.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/compute_performance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Performance Metrics for Classification/Regression Results — compute_performance","text":"","code":"compute_performance(obj, result)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/compute_performance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Performance Metrics for Classification/Regression Results — compute_performance","text":"obj input object performance metrics computed. result classification/regression result object evaluate.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/compute_performance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Performance Metrics for Classification/Regression Results — compute_performance","text":"list performance metrics input classification/regression result object.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/create_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Distance Function Object — create_dist","title":"Create Distance Function Object — create_dist","text":"function constructs object representing distance function,  can used generic functions like `pairwise_dist` computing distances.  object stores method distance calculation, labels associated data points,  additional parameters may affect distance computation.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/create_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Distance Function Object — create_dist","text":"","code":"create_dist(name, labels, ...)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/create_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Distance Function Object — create_dist","text":"name character string specifying method distance computation.  method name used dispatch appropriate distance calculation function.  Common methods might include \"euclidean\", \"manhattan\", \"mahalanobis\", etc. labels vector labels identifiers associated rows data matrix.  labels important reference distance computations, particularly adjustments  restrictions based groupings identifiers needed. ... Additional parameters relevant specific distance method.  include tuning parameters like `lambda` shrinkage covariance estimation  parameters controlling behavior distance computation.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/create_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Distance Function Object — create_dist","text":"Returns object class `distfun` specific method class  (specified `method` parameter). object encapsulates information  necessary compute distances data points according specified method  additional parameters.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/create_dist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Distance Function Object — create_dist","text":"`create_dist` function enables flexible creation distance function objects.  specifying method associated parameters, users can customize behavior  distance calculations. functionality especially useful statistical  machine learning applications different distance metrics can significant  impacts results.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/create_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Distance Function Object — create_dist","text":"","code":"# Create a Euclidean distance function object dist_obj_euc <- create_dist(\"euclidean\", labels = c(\"A\", \"B\", \"C\", \"D\"))  # Create a Mahalanobis distance function object with additional parameters dist_obj_maha <- create_dist(\"mahalanobis\", labels = c(\"A\", \"B\", \"C\", \"D\"))"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/cross_validation.html","id":null,"dir":"Reference","previous_headings":"","what":"bootstrap_blocked_cross_validation — bootstrap_blocked_cross_validation","title":"bootstrap_blocked_cross_validation — bootstrap_blocked_cross_validation","text":"Bootstrap Blocked Cross-Validation Specification function constructs cross-validation specification using predefined blocking variable. function constructs cross-validation specification using predefined blocking variable, dividing block specified number folds. function constructs cross-validation specification uses user-supplied set training test indices.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/cross_validation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"bootstrap_blocked_cross_validation — bootstrap_blocked_cross_validation","text":"","code":"bootstrap_blocked_cross_validation(block_var, nreps = 10, weights = NULL)  blocked_cross_validation(block_var)  sequential_blocked_cross_validation(block_var, nfolds = 2, nreps = 4)  custom_cross_validation(sample_set)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/cross_validation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"bootstrap_blocked_cross_validation — bootstrap_blocked_cross_validation","text":"block_var integer vector indicating cross-validation blocks. block indicated unique integer. nreps number repetitions cross-validation procedure. weights numeric vector length `block_var`, representing weights sample. Higher weights indicate observations sampled often. provided, samples treated equally likely. nfolds number folds divide sequence trials within block. sample_set list training test sample indices. element list must named list two elements: \"train\" \"test\".","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/cross_validation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"bootstrap_blocked_cross_validation — bootstrap_blocked_cross_validation","text":"list containing cross-validation specification, class attributes \"bootstrap_blocked_cross_validation\", \"cross_validation\", \"list\". list containing cross-validation specification, class attributes \"blocked_cross_validation\", \"cross_validation\", \"list\". list containing cross-validation specification, class attributes \"sequential_blocked_cross_validation\", \"cross_validation\", \"list\". list containing custom cross-validation specification, class attributes \"custom_cross_validation\", \"cross_validation\", \"list\".","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/cross_validation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"bootstrap_blocked_cross_validation — bootstrap_blocked_cross_validation","text":"function constructs cross-validation specification using predefined blocking variable creates bootstrap resamples within blocks. function first checks provided weights non-negative normalizes sum 1. constructs list containing block variable, number folds, block indices, number repetitions, weights. output list assigned class `\"bootstrap_blocked_cross_validation\"`, `\"cross_validation\"`, `\"list\"`. function constructs list containing block variable, number folds, block indices. output list assigned class `\"blocked_cross_validation\"`, `\"cross_validation\"`, `\"list\"`. function constructs list containing block variable, number folds, number repetitions, block indices. output list assigned class `\"sequential_blocked_cross_validation\"`, `\"cross_validation\"`, `\"list\"`. custom_cross_validation class allows users define cross-validation structure providing set training test indices. can useful situations standard cross-validation methods (e.g., k-fold, leave-one-) adequately represent desired validation structure. function constructs list containing sample set number folds, derived length sample set. output list assigned class `\"custom_cross_validation\"`, `\"cross_validation\"`, `\"list\"`.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/cross_validation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"bootstrap_blocked_cross_validation — bootstrap_blocked_cross_validation","text":"","code":"block_var <- rep(1:5, each=50) weights <- runif(length(block_var)) weights[1] = 0 cval <- bootstrap_blocked_cross_validation(block_var, weights=weights) X <- matrix(rnorm(length(block_var) * 10), length(block_var), 10) y <- rep(letters[1:5], length.out=length(block_var))  sam <- crossval_samples(cval, as.data.frame(X), y) block_var <- rep(1:5, each=50) cval <- blocked_cross_validation(block_var) X <- matrix(rnorm(length(block_var) * 10), length(block_var), 10) y <- rep(letters[1:5], length.out=length(block_var))  sam <- crossval_samples(cval, as.data.frame(X), y) block_var <- rep(1:5, each=50) nfolds <- 2 nreps <- 4 cval <- sequential_blocked_cross_validation(block_var, nfolds, nreps) X <- matrix(rnorm(length(block_var) * 10), length(block_var), 10) y <- rep(letters[1:5], length.out=length(block_var))  sam <- crossval_samples(cval, as.data.frame(X), y) sample_set <- list(   list(train = 1:80, test = 81:100),   list(train = 1:60, test = 61:100),   list(train = 1:40, test = 41:100) ) cval <- custom_cross_validation(sample_set) X <- matrix(rnorm(100 * 10), 100, 10) y <- rep(letters[1:4], length.out=100)  sam <- crossval_samples(cval, as.data.frame(X), y)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/crossv_block.html","id":null,"dir":"Reference","previous_headings":"","what":"Block Cross-Validation Data Preparation — crossv_block","title":"Block Cross-Validation Data Preparation — crossv_block","text":"function prepares data block cross-validation dividing dataset based provided block variable. creates subsets training testing data block without performing analysis fitting models.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/crossv_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Block Cross-Validation Data Preparation — crossv_block","text":"","code":"crossv_block(data, y, block_var, id = \".id\")"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/crossv_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Block Cross-Validation Data Preparation — crossv_block","text":"data data frame containing training data. y response vector. block_var integer vector defining cross-validation blocks. id character string specifying identifier output data frame.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/crossv_block.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Block Cross-Validation Data Preparation — crossv_block","text":"tibble containing training testing data, response vectors, block IDs fold.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/crossv_block.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Block Cross-Validation Data Preparation — crossv_block","text":"","code":"X <- data.frame(x1 = rnorm(100), x2 = rnorm(100)) y <- rep(letters[1:4], 25) block_var <- rep(1:4, each = 25) cv <- crossv_block(X, y, block_var)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/crossv_bootstrap_block.html","id":null,"dir":"Reference","previous_headings":"","what":"Block Bootstrap Cross-Validation Data Preparation — crossv_bootstrap_block","title":"Block Bootstrap Cross-Validation Data Preparation — crossv_bootstrap_block","text":"function prepares data block bootstrap cross-validation dividing dataset based provided block variable. creates subsets training testing data block using bootstrap sampling within training blocks, without performing analysis fitting models.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/crossv_bootstrap_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Block Bootstrap Cross-Validation Data Preparation — crossv_bootstrap_block","text":"","code":"crossv_bootstrap_block(   data,   y,   block_var,   nreps = 5,   id = \".id\",   weights = NULL )"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/crossv_bootstrap_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Block Bootstrap Cross-Validation Data Preparation — crossv_bootstrap_block","text":"data data frame containing training data. y response vector. block_var integer vector defining cross-validation blocks. nreps integer specifying number bootstrap repetitions. id character string specifying identifier output data frame. weights optional numeric vector weights used bootstrap sampling.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/crossv_bootstrap_block.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Block Bootstrap Cross-Validation Data Preparation — crossv_bootstrap_block","text":"tibble containing training testing data, response vectors, block IDs fold.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/crossv_bootstrap_block.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Block Bootstrap Cross-Validation Data Preparation — crossv_bootstrap_block","text":"function first checks length `block_var` vector matches length response vector `y`. creates list block indices ensures one block bootstrap. weights provided, function splits weights according block variable. function performs bootstrap sampling within training blocks keeps test set fixed. block, generates list training indices using bootstrap sampling creates corresponding training testing data sets.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/crossv_k.html","id":null,"dir":"Reference","previous_headings":"","what":"K-fold Cross-Validation Data Preparation — crossv_k","title":"K-fold Cross-Validation Data Preparation — crossv_k","text":"function prepares data k-fold cross-validation dividing dataset k folds. creates subsets training testing data fold without performing analysis fitting models.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/crossv_k.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"K-fold Cross-Validation Data Preparation — crossv_k","text":"","code":"crossv_k(data, y, k = 5, id = \".id\")"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/crossv_k.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"K-fold Cross-Validation Data Preparation — crossv_k","text":"data data frame containing training data. y response vector. k integer specifying number folds cross-validation. id character string specifying identifier output data frame.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/crossv_k.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"K-fold Cross-Validation Data Preparation — crossv_k","text":"tibble containing training testing data, response vectors, fold IDs fold.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/crossv_k.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"K-fold Cross-Validation Data Preparation — crossv_k","text":"","code":"data <- iris[,-5] y <- iris$Species result <- crossv_k(data, y, k = 5)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/crossval_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"crossval_samples — crossval_samples","title":"crossval_samples — crossval_samples","text":"generic function applies cross-validation scheme split data training testing sets. used along cross-validation control objects S3 implementation functions perform cross-validation process.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/crossval_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"crossval_samples — crossval_samples","text":"","code":"crossval_samples(obj, data, y, ...)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/crossval_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"crossval_samples — crossval_samples","text":"obj cross-validation control object. data data frame containing predictor variables. y vector containing response variable. ... Extra arguments passed specific cross-validation methods.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/crossval_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"crossval_samples — crossval_samples","text":"tibble containing training testing sets fold, well response variables sets.","code":""},{"path":[]},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/crossval_samples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"crossval_samples — crossval_samples","text":"","code":"# Example with k-fold cross-validation cval <- kfold_cross_validation(len=100, nfolds=10) samples <- crossval_samples(cval, data=as.data.frame(matrix(rnorm(100*10), 100, 10)), y=rep(letters[1:5],20)) stopifnot(nrow(samples) == 10)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/custom_performance.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Custom Performance Metric to Prediction Result — custom_performance","title":"Apply Custom Performance Metric to Prediction Result — custom_performance","text":"function applies user-supplied performance metric prediction result object.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/custom_performance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Custom Performance Metric to Prediction Result — custom_performance","text":"","code":"custom_performance(x, custom_fun, split_list = NULL)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/custom_performance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Custom Performance Metric to Prediction Result — custom_performance","text":"x prediction result object. custom_fun function used compute performance metrics, .e., custom_fun(x). split_list optional named list splitting groups. provided, performance metric computed group returned named vector.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/custom_performance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Custom Performance Metric to Prediction Result — custom_performance","text":"named vector calculated custom performance metric(s).","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/custom_performance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply Custom Performance Metric to Prediction Result — custom_performance","text":"function allows users apply custom performance metric prediction result object. split list provided, performance metric computed group separately, results returned named vector.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/data_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Sample from Dataset — data_sample","title":"Extract Sample from Dataset — data_sample","text":"function extracts sample given dataset object.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/data_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Sample from Dataset — data_sample","text":"","code":"data_sample(obj, vox)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/data_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Sample from Dataset — data_sample","text":"obj input dataset object, instance data class compatible sample extraction. vox voxel indices/coordinates associated data sample. ... Additional arguments passed specific sample extraction method input object's class.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/data_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Sample from Dataset — data_sample","text":"sample extracted input dataset based specific extraction method.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/distance-constructors.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance Function Constructors — cordist","title":"Distance Function Constructors — cordist","text":"functions provide convenient constructors various types distance functions. constructor function initializes distance function object use distance computation functions, specifying method necessary labels.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/distance-constructors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance Function Constructors — cordist","text":"","code":"cordist(labels = NULL, method = c(\"pearson\", \"spearman\"))  mahadist(labels = NULL)  eucdist(labels = NULL)  robustmahadist(labels = NULL)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/distance-constructors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance Function Constructors — cordist","text":"labels vector labels associated data points. method method distance computation, applicable `cordist`.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/distance-constructors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distance Function Constructors — cordist","text":"object class `distfun` specific method subclass, encapsulating         information necessary computing distances according specified method.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/distance-constructors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Distance Function Constructors — cordist","text":"constructors allow specification distance calculation methods associated labels: - `cordist` creates correlation distance function. - `mahadist` creates Mahalanobis distance function. - `eucdist` creates Euclidean distance function. - `robustmahadist` creates robust version Mahalanobis distance function.","code":""},{"path":[]},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/distance-constructors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distance Function Constructors — cordist","text":"","code":"dist_obj_1 <- cordist(labels = c(\"A\", \"B\", \"C\"), method = \"pearson\") dist_obj_2 <- mahadist(labels = c(\"A\", \"B\", \"C\")) #> Error in mahadist(labels = c(\"A\", \"B\", \"C\")): could not find function \"mahadist\" dist_obj_3 <- eucdist(labels = c(\"A\", \"B\", \"C\")) #> Error in eucdist(labels = c(\"A\", \"B\", \"C\")): could not find function \"eucdist\" dist_obj_4 <- robustmahadist(labels = c(\"A\", \"B\", \"C\")) #> Error in robustmahadist(labels = c(\"A\", \"B\", \"C\")): could not find function \"robustmahadist\""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/do_merge_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge searchlight results — do_merge_results","title":"Merge searchlight results — do_merge_results","text":"function merges searchlight results, combining first result rest results.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/do_merge_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge searchlight results — do_merge_results","text":"","code":"do_merge_results(r1, good_results)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/do_merge_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge searchlight results — do_merge_results","text":"r1 list indices representing searchlight results merged. good_results data frame containing valid searchlight results.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/do_merge_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge searchlight results — do_merge_results","text":"combined searchlight result object.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/do_randomized.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform randomized searchlight analysis — do_randomized","title":"Perform randomized searchlight analysis — do_randomized","text":"function performs randomized searchlight analysis using specified model, radius, number iterations. can customized different MVPA functions, combiners, permutation options.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/do_randomized.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform randomized searchlight analysis — do_randomized","text":"","code":"do_randomized(   model_spec,   radius,   niter,   mvpa_fun = mvpa_iterate,   combiner = pool_randomized,   permute = FALSE,   ... )"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/do_randomized.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform randomized searchlight analysis — do_randomized","text":"model_spec object specifying model used searchlight analysis. radius radius searchlight sphere. niter number iterations randomized searchlight. mvpa_fun MVPA function used searchlight analysis (default mvpa_iterate). combiner function used combine results (default pool_randomized). permute Whether permute labels (default FALSE). ... Additional arguments passed MVPA function.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/do_standard.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform standard searchlight analysis — do_standard","title":"Perform standard searchlight analysis — do_standard","text":"function performs standard searchlight analysis using specified model radius. can customized different MVPA functions, combiners, permutation options.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/do_standard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform standard searchlight analysis — do_standard","text":"","code":"do_standard(   model_spec,   radius,   mvpa_fun = mvpa_iterate,   combiner = combine_standard,   permute = FALSE,   ... )"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/do_standard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform standard searchlight analysis — do_standard","text":"model_spec object specifying model used searchlight analysis. radius radius searchlight sphere. mvpa_fun MVPA function used searchlight analysis (default mvpa_iterate). combiner function used combine results (default combine_standard). permute Whether permute labels (default FALSE). ... Additional arguments passed MVPA function.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/external_crossval.html","id":null,"dir":"Reference","previous_headings":"","what":"External Cross-Validation — external_crossval","title":"External Cross-Validation — external_crossval","text":"function performs external cross-validation provided ROI model specification. returns tibble performance metrics, fitted model (optional), warnings errors.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/external_crossval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"External Cross-Validation — external_crossval","text":"","code":"external_crossval(   roi,   mspec,   id,   compute_performance = TRUE,   return_fit = FALSE,   permute = FALSE )"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/external_crossval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"External Cross-Validation — external_crossval","text":"roi list containing train_roi test_roi elements. mspec model specification object. id unique identifier model. compute_performance Logical, whether compute performance metrics (default: TRUE). return_fit Logical, whether return fitted model (default: FALSE). permute Logical, whether permute training labels (default: FALSE).","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/external_crossval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"External Cross-Validation — external_crossval","text":"tibble performance metrics, fitted model (optional), warnings errors.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/feature_selector.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a feature selection specification — feature_selector","title":"Create a feature selection specification — feature_selector","text":"function creates feature selection specification using provided method, cutoff type, cutoff value.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/feature_selector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a feature selection specification — feature_selector","text":"","code":"feature_selector(method, cutoff_type, cutoff_value)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/feature_selector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a feature selection specification — feature_selector","text":"method type feature selection method use. Supported methods \"FTest\" \"catscore\". cutoff_type type threshold used select features. Supported cutoff types \"top_k\" \"top_p\". cutoff_value numeric value threshold cutoff.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/feature_selector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a feature selection specification — feature_selector","text":"list class name equal method argument.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/feature_selector.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a feature selection specification — feature_selector","text":"available feature selection methods :   - FTest: Computes one-way ANOVA every column feature matrix.   - catscore: Computes correlation adjusted t-test every column matrix using sda.ranking sda package.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/feature_selector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a feature selection specification — feature_selector","text":"","code":"fsel <- feature_selector(\"FTest\", \"top_k\", 1000) fsel <- feature_selector(\"FTest\", \"top_p\", .1) class(fsel) == \"FTest\" #> [1]  TRUE FALSE FALSE"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/filter_roi.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Region of Interest (ROI) — filter_roi","title":"Filter Region of Interest (ROI) — filter_roi","text":"function filters ROI, keeping valid columns.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/filter_roi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Region of Interest (ROI) — filter_roi","text":"","code":"filter_roi(roi)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/filter_roi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Region of Interest (ROI) — filter_roi","text":"roi list containing train test ROI data.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/filter_roi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Region of Interest (ROI) — filter_roi","text":"list filtered train test ROI data.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/filter_roi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter Region of Interest (ROI) — filter_roi","text":"function filters ROI removing columns missing values (NA) zero standard deviation. returns list filtered train test ROI data.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/fit_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Model — fit_model","title":"Fit Model — fit_model","text":"Fit classification regression model.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/fit_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Model — fit_model","text":"","code":"fit_model(obj, roi_x, y, wts, param, lev, last, classProbs, ...)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/fit_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Model — fit_model","text":"obj model fitting object. roi_x ROI containing training data. y response vector. wts set case weights. param Tuning parameters. lev Unused. last Unused. classProbs Unused. ... Additional arguments passed method-specific function.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/fit_model.mvpa_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit an MVPA model — fit_model.mvpa_model","title":"Fit an MVPA model — fit_model.mvpa_model","text":"function fits multivariate pattern analysis (MVPA) model given data.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/fit_model.mvpa_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit an MVPA model — fit_model.mvpa_model","text":"","code":"# S3 method for mvpa_model fit_model(obj, x, y, wts, param, classProbs, ...)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/fit_model.mvpa_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit an MVPA model — fit_model.mvpa_model","text":"obj object derived mvpa_model class. x training data matrix. y response vector. wts Optional class weights (underlying model supports ). param hyperparameters model. classProbs Logical; TRUE, class probabilities computed (default FALSE). ... Additional arguments passed underlying model fitting function.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/fit_model.mvpa_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit an MVPA model — fit_model.mvpa_model","text":"fitted model object additional attributes \"obsLevels\" \"problemType\".","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/fut_vector_rsa.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply the RSA model in parallel using futures — fut_vector_rsa","title":"Apply the RSA model in parallel using futures — fut_vector_rsa","text":"Apply RSA model parallel using futures","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/fut_vector_rsa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply the RSA model in parallel using futures — fut_vector_rsa","text":"","code":"fut_vector_rsa(mod_spec, sf, ...)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/fut_vector_rsa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply the RSA model in parallel using futures — fut_vector_rsa","text":"mod_spec model specification. sf tibble containing data sets identifiers. method Method computing similarities.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/fut_vector_rsa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply the RSA model in parallel using futures — fut_vector_rsa","text":"combined result RSA analyses.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/gen_sample_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"gen_sample_dataset — gen_sample_dataset","title":"gen_sample_dataset — gen_sample_dataset","text":"gen_sample_dataset","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/gen_sample_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gen_sample_dataset — gen_sample_dataset","text":"","code":"gen_sample_dataset(   D,   nobs,   response_type = c(\"categorical\", \"continuous\"),   data_mode = c(\"image\", \"surface\"),   spacing = c(1, 1, 1),   blocks = 5,   nlevels = 5,   external_test = FALSE,   ntest_obs = nobs,   split_by = NULL,   na_cols = 0 )"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/gen_sample_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gen_sample_dataset — gen_sample_dataset","text":"D data dimension(s) nobs number observations response_type 'categorical' 'continuous' data_mode 'image' 'surface' spacing voxel spacing blocks number 'blocks' data nlevels number category levels external_test test set 'external' training set ntest_obs number test observations (relevant external_test true) split_by compute performance measures level factor na_cols number columns NA values add","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/get_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Multiple Data Samples — get_samples","title":"Get Multiple Data Samples — get_samples","text":"function extracts multiple data samples based list voxel/index sets given dataset object.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/get_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Multiple Data Samples — get_samples","text":"","code":"get_samples(obj, vox_list)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/get_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Multiple Data Samples — get_samples","text":"obj input dataset object, instance data class compatible data sample extraction. vox_list list vectors containing voxel indices extract dataset object.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/get_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Multiple Data Samples — get_samples","text":"list data samples extracted input dataset based specified voxel/index sets.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/get_searchlight.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Searchlight Iterator — get_searchlight","title":"Generate Searchlight Iterator — get_searchlight","text":"function generates searchlight iterator suitable given input dataset, volumetric surface data.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/get_searchlight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Searchlight Iterator — get_searchlight","text":"","code":"get_searchlight(obj, ...)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/get_searchlight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Searchlight Iterator — get_searchlight","text":"obj input dataset object, instance data class compatible searchlight analysis. ... Additional arguments passed specific searchlight iterator method input object's class.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/get_searchlight.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Searchlight Iterator — get_searchlight","text":"searchlight iterator object can used perform searchlight analysis input dataset.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/group_means.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Group Means of a Matrix — group_means","title":"Compute Group Means of a Matrix — group_means","text":"function calculates average vector level grouping variable given matrix.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/group_means.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Group Means of a Matrix — group_means","text":"","code":"group_means(X, margin, group)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/group_means.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Group Means of a Matrix — group_means","text":"X matrix group means calculated. margin integer specifying margin average . Use 1 averaging rows, 2 averaging columns. group grouping variable, either factor integer vector, defines groups calculate means .","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/group_means.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Group Means of a Matrix — group_means","text":"matrix number rows columns (depending margin) input matrix X, number columns rows corresponding number unique groups grouping variable.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/group_means.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Group Means of a Matrix — group_means","text":"","code":"# Create a random matrix data <- matrix(rnorm(100 * 100), 100, 100)  # Define a grouping variable groups <- factor(rep(1:5, each = 20))  # Calculate group means for each row row_means <- group_means(data, margin = 1, group = groups)  # Calculate group means for each column col_means <- group_means(data, margin = 2, group = groups)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/has_test_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Test Set Availability — has_test_set","title":"Test Set Availability — has_test_set","text":"Check object test set available.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/has_test_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test Set Availability — has_test_set","text":"","code":"has_test_set(obj)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/has_test_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test Set Availability — has_test_set","text":"obj object check test set.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/kfold_cross_validation.html","id":null,"dir":"Reference","previous_headings":"","what":"kfold_cross_validation — kfold_cross_validation","title":"kfold_cross_validation — kfold_cross_validation","text":"Construct cross-validation specification randomly partitions input set nfolds folds.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/kfold_cross_validation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"kfold_cross_validation — kfold_cross_validation","text":"","code":"kfold_cross_validation(len, nfolds = 10)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/kfold_cross_validation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"kfold_cross_validation — kfold_cross_validation","text":"len integer representing number observations. nfolds integer specifying number cross-validation folds.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/kfold_cross_validation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"kfold_cross_validation — kfold_cross_validation","text":"object class \"kfold_cross_validation\", \"cross_validation\", \"list\" containing block_var nfolds.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/kfold_cross_validation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"kfold_cross_validation — kfold_cross_validation","text":"function creates k-fold cross-validation scheme cases data needs split specified number folds evaluation. returns object class \"kfold_cross_validation\", \"cross_validation\", \"list\".","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/kfold_cross_validation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"kfold_cross_validation — kfold_cross_validation","text":"","code":"cval <- kfold_cross_validation(len=100, nfolds=10) samples <- crossval_samples(cval, data=as.data.frame(matrix(rnorm(100*10), 100, 10)), y=rep(letters[1:5],20)) stopifnot(nrow(samples) == 10)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/list_model.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of model fits — list_model","title":"a list of model fits — list_model","text":"list model fits","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/list_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of model fits — list_model","text":"","code":"list_model(fits, names = 1:length(fits))"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/list_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"a list of model fits — list_model","text":"fits list fits names names fits","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/load_model.html","id":null,"dir":"Reference","previous_headings":"","what":"load_model — load_model","title":"load_model — load_model","text":"load_model","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/load_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"load_model — load_model","text":"","code":"load_model(name)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/load_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"load_model — load_model","text":"name name model","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/load_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"load_model — load_model","text":"","code":"load_model(\"sda\") #> $label #> [1] \"sda\" #>  #> $library #> [1] \"sda\" #>  #> $loop #> NULL #>  #> $type #> [1] \"Classification\" #>  #> $parameters #>   parameter   class       label #> 1  diagonal logical Diagonalize #> 2    lambda numeric   shrinkage #>  #> $grid #> function (x, y, len = NULL, search = \"grid\")  #> { #>     if (search == \"grid\") { #>         out <- data.frame(diagonal = FALSE, lambda = seq(0, 1,  #>             length = len)) #>     } #>     else { #>         out <- data.frame(lambda = runif(len, min = 0, 1), diagonal = sample(c(TRUE,  #>             FALSE), size = len, replace = TRUE)) #>     } #>     out #> } #>  #> $fit #> function (x, y, wts, param, lev, last, classProbs, ...)  #> sda::sda(as.matrix(x), y, diagonal = param$diagonal, lambda = param$lambda,  #>     ...) #>  #> $predict #> function (modelFit, newdata, submodels = NULL)  #> sda::predict.sda(modelFit, as.matrix(newdata))$class #>  #> $prob #> function (modelFit, newdata, submodels = NULL)  #> sda::predict.sda(modelFit, as.matrix(newdata))$posterior #>  #> $predictors #> function (x, ...)  #> { #>     colnames(x$beta) #> } #>  #> $levels #> function (x)  #> x$obsLevels #>  #> $tags #> [1] \"Discriminant Analysis\" \"Regularization\"        \"Linear Classifier\"     #>  #> $sort #> function (x)  #> x[order(x$diagonal, x$lambda), ] #>"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/manova_design.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a MANOVA Design — manova_design","title":"Create a MANOVA Design — manova_design","text":"function creates MANOVA design object containing formula expression named list data.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/manova_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a MANOVA Design — manova_design","text":"","code":"manova_design(formula, data)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/manova_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a MANOVA Design — manova_design","text":"formula formula expression specifying MANOVA regression model. data named list containing dissimilarity matrices auxiliary variables.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/manova_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a MANOVA Design — manova_design","text":"MANOVA design object class attributes \"manova_design\" \"list\".","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/manova_design.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a MANOVA Design — manova_design","text":"function takes formula expression named list data input, returns MANOVA design object. object list contains formula expression named list data class attributes \"manova_design\" \"list\". object can used MANOVA analysis related multivariate statistical methods.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/manova_design.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a MANOVA Design — manova_design","text":"","code":"# Create a MANOVA design formula <- y ~ x1 + x2 data_list <- list(y = dissimilarity_matrix_y, x1 = dissimilarity_matrix_x1, x2 = dissimilarity_matrix_x2) #> Error in eval(expr, envir, enclos): object 'dissimilarity_matrix_y' not found manova_design_obj <- manova_design(formula, data_list) #> Error in eval(expr, envir, enclos): object 'data_list' not found"},{"path":[]},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/manova_iterate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MANOVA Iteration for Voxel Sets — manova_iterate","text":"","code":"manova_iterate(   mod_spec,   vox_list,   ids = 1:length(vox_list),   batch_size = as.integer(0.1 * length(ids)),   permute = FALSE )"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/manova_iterate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MANOVA Iteration for Voxel Sets — manova_iterate","text":"mod_spec mvpa_model object representing model specification. vox_list list voxel indices coordinates. ids vector IDs voxel set. batch_size integer specifying batch size processing (default 10 permuteA logical indicating whether permute voxel sets (default FALSE). data.frame containing MANOVA results voxel set. function runs MANOVA analysis list voxel sets. Langsrud, O. (2000). Fifty-fifty MANOVA: multivariate analysis variance collinear responses. Proceedings Industrial Statistics Action, 2000(2), 250-264.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/manova_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a MANOVA Model — manova_model","title":"Create a MANOVA Model — manova_model","text":"function creates MANOVA model object containing `mvpa_dataset` instance `manova_design` instance.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/manova_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a MANOVA Model — manova_model","text":"","code":"manova_model(dataset, design)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/manova_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a MANOVA Model — manova_model","text":"dataset mvpa_dataset instance. design manova_design instance.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/manova_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a MANOVA Model — manova_model","text":"MANOVA model object class attributes \"manova_model\" \"list\".","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/manova_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a MANOVA Model — manova_model","text":"function takes `mvpa_dataset` instance `manova_design` instance input, returns MANOVA model object. object list contains dataset design class attributes \"manova_model\" \"list\". object can used multivariate statistical analysis using MANOVA method.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/manova_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a MANOVA Model — manova_model","text":"","code":"# Create a MANOVA model dataset <- create_mvpa_dataset(data_matrix, labels, subject_ids) #> Error in create_mvpa_dataset(data_matrix, labels, subject_ids): could not find function \"create_mvpa_dataset\" formula <- y ~ x1 + x2 data_list <- list(y = dissimilarity_matrix_y, x1 = dissimilarity_matrix_x1, x2 = dissimilarity_matrix_x2) #> Error in eval(expr, envir, enclos): object 'dissimilarity_matrix_y' not found design <- manova_design(formula, data_list) #> Error in eval(expr, envir, enclos): object 'data_list' not found manova_model_obj <- manova_model(dataset, design) #> Error in eval(expr, envir, enclos): object 'dataset' not found"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/merge_predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge predictions from multiple models — merge_predictions","title":"Merge predictions from multiple models — merge_predictions","text":"Combine predictions several models applied test set.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/merge_predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge predictions from multiple models — merge_predictions","text":"","code":"merge_predictions(obj1, rest, ...)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/merge_predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge predictions from multiple models — merge_predictions","text":"obj1 first object containing predictions. rest rest objects containing predictions. ... Additional arguments passed function.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/merge_predictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge predictions from multiple models — merge_predictions","text":"combined object containing merged predictions multiple models.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/merge_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge Multiple Classification/Regression Results — merge_results","title":"Merge Multiple Classification/Regression Results — merge_results","text":"function merges two classification/regression result objects single object.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/merge_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge Multiple Classification/Regression Results — merge_results","text":"","code":"merge_results(x, ...)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/merge_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge Multiple Classification/Regression Results — merge_results","text":"x first classification/regression result object merge. ... Additional classification/regression result objects merge.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/merge_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge Multiple Classification/Regression Results — merge_results","text":"single merged classification/regression result object containing combined results input objects.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/merge_results.regional_mvpa_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge regional MVPA results — merge_results.regional_mvpa_result","title":"Merge regional MVPA results — merge_results.regional_mvpa_result","text":"Merge multiple regional MVPA results single result.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/merge_results.regional_mvpa_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge regional MVPA results — merge_results.regional_mvpa_result","text":"","code":"# S3 method for regional_mvpa_result merge_results(x, ...)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/merge_results.regional_mvpa_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge regional MVPA results — merge_results.regional_mvpa_result","text":"x regional_mvpa_result object. ... Additional regional_mvpa_result objects merged.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/merge_results.regional_mvpa_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge regional MVPA results — merge_results.regional_mvpa_result","text":"merged regional_mvpa_result object.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/model_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Model Fit Object — model_fit","title":"Create a Model Fit Object — model_fit","text":"Constructs model fit object, representing result single model fit chunk data. object contains information model, response variable, model fit, problem type, model parameters, voxel indices, optional feature mask.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/model_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Model Fit Object — model_fit","text":"","code":"model_fit(   model,   y,   fit,   model_type = c(\"classification\", \"regression\"),   param,   vox_ind,   feature_mask = NULL )"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/model_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Model Fit Object — model_fit","text":"model caret-style model object. y response variable (predictand). fit fitted model. model_type problem type, either \"classification\" \"regression\" (default). Must one provided options. param model parameters. vox_ind voxel indices indicating data coordinates. feature_mask optional logical mask indicating selected subset columns (features).","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/model_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Model Fit Object — model_fit","text":"object class model_fit, containing model, response variable, fitted model, problem type, model parameters, voxel indices, optional feature mask. object also assigned class based problem type: class_model_fit classification regression_model_fit regression.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/multiway_classification_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Multiway Classification Result Object — multiway_classification_result","title":"Create a Multiway Classification Result Object — multiway_classification_result","text":"function creates multiway classification result object containing observed predicted values, class probabilities, test design, test indices, predictor.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/multiway_classification_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Multiway Classification Result Object — multiway_classification_result","text":"","code":"multiway_classification_result(   observed,   predicted,   probs,   testind = NULL,   test_design = NULL,   predictor = NULL )"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/multiway_classification_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Multiway Classification Result Object — multiway_classification_result","text":"observed vector observed values. predicted vector predicted values. probs matrix class probabilities. testind vector indices test data (optional). test_design test design (optional). predictor predictor used multiway classification model (optional).","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/multiway_classification_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Multiway Classification Result Object — multiway_classification_result","text":"list class attributes \"multiway_classification_result\", \"classification_result\", \"list\" containing observed predicted values, class probabilities, test design, test indices, predictor.","code":""},{"path":[]},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/mvpa_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"mvpa_dataset — mvpa_dataset","title":"mvpa_dataset — mvpa_dataset","text":"data structure encapsulate standard (volumetric) training dataset, optional test dataset voxel 'mask'.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/mvpa_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mvpa_dataset — mvpa_dataset","text":"","code":"mvpa_dataset(train_data, test_data = NULL, mask)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/mvpa_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mvpa_dataset — mvpa_dataset","text":"train_data training data set: NeuroVec instance test_data optional test data set: NeuroVec instance mask set voxels include: NeuroVol instance","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/mvpa_design.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an MVPA Design Object — mvpa_design","title":"Create an MVPA Design Object — mvpa_design","text":"Constructs MVPA design object, defining classification regression problem Multi-Variate Pattern Analysis (MVPA). handles different configurations input datasets, response variables, optional parameters, blocking variables group structures.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/mvpa_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an MVPA Design Object — mvpa_design","text":"","code":"mvpa_design(   train_design,   y_train,   test_design = NULL,   y_test = NULL,   block_var = NULL,   split_by = NULL )"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/mvpa_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an MVPA Design Object — mvpa_design","text":"train_design data.frame containing training variables. y_train formula, character name, factor specifying response variable training. Must least 2 levels one training instances. test_design optional data.frame containing test variables. Must provided y_test specified. y_test optional formula, character name, factor specifying response variable testing. Requires test_design provided. block_var optional formula, character name, integer vector specifying blocking variable, used repeated measures designs. split_by optional formula indicating grouping structure evaluating test performance. Splitting condition must result least 3 observations per group.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/mvpa_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an MVPA Design Object — mvpa_design","text":"object class mvpa_design, containing training optional test design, response variables, blocking variable, group structure.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/mvpa_design.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an MVPA Design Object — mvpa_design","text":"","code":"df1 <- data.frame(y = rep(letters[1:4], 5), x1 = rnorm(20), x2 = rnorm(20), block = rep(1:4, each = 5)) des <- mvpa_design(df1, ~ y, block_var = ~ block)  ## With a test set testdes <- data.frame(y = sample(letters[1:4], 10)) #> Error in sample.int(length(x), size, replace, prob): cannot take a sample larger than the population when 'replace = FALSE' des <- mvpa_design(df1, ~ y, block_var = ~ block, test_design = testdes, y_test = ~ y) #> Error in eval(expr, envir, enclos): object 'testdes' not found"},{"path":[]},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/mvpa_iterate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MVPA Iteration for Voxel Sets with Parallelization — mvpa_iterate","text":"","code":"mvpa_iterate(   mod_spec,   vox_list,   ids = 1:length(vox_list),   compute_performance = TRUE,   return_predictions = TRUE,   return_fits = FALSE,   batch_size = as.integer(0.1 * length(ids)),   permute = FALSE,   verbose = TRUE )"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/mvpa_iterate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MVPA Iteration for Voxel Sets with Parallelization — mvpa_iterate","text":"mod_spec object class mvpa_model specifying model. vox_list list voxel indices coordinates. ids vector IDs voxel set (defaults 1:length(vox_list)). compute_performance logical indicating whether compute store performance measures voxel set (defaults TRUE). return_predictions logical indicating whether return row-wise predictions voxel set (defaults TRUE). return_fits logical indicating whether return model fit voxel set (defaults FALSE). batch_size integer specifying number voxel sets process batch (defaults 10 permuteA logical indicating whether permute labels (defaults FALSE). verboseA logical indicating whether print progress messages (defaults TRUE). data.frame containing results voxel set, including performance measures, predictions, model fits, specified input parameters. function fits classification regression model voxel set list using parallelization. can compute store performance measures, return row-wise predictions, return model fit voxel set. function utilizes parallel processing speed process fitting specified model voxel set list. parallelization achieved using `furrr` package, provides parallel backend `purrr` package. default, divides voxel sets batches processes parallel according specified batch size. function provides options control return performance measures, predictions, model fits voxel set.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/mvpa_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an MVPA Model — mvpa_model","title":"Create an MVPA Model — mvpa_model","text":"Create MVPA model based caret-based classification regression model.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/mvpa_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an MVPA Model — mvpa_model","text":"","code":"mvpa_model(   model,   dataset,   design,   model_type = c(\"classification\", \"regression\"),   crossval = NULL,   feature_selector = NULL,   tune_grid = NULL,   tune_reps = 15,   performance = NULL,   class_metrics = TRUE )"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/mvpa_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an MVPA Model — mvpa_model","text":"model caret-based classification regression model. dataset `mvpa_dataset` instance. design `mvpa_design` instance. model_type character string indicating problem type: \"classification\" \"regression\". crossval optional `cross_validation` instance. feature_selector optional `feature_selector` instance. tune_grid optional parameter tuning grid `data.frame`. tune_reps number replications used parameter tuning. relevant `tune_grid` supplied. performance optional custom function computing performance metrics. class_metrics logical flag indicating whether compute performance metrics class.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/mvpa_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an MVPA Model — mvpa_model","text":"`performance` supplied, must function takes one argument returns named list scalar values.  argument function takes class deriving `classification_result` appropriate problem hand. See example .","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/mvpa_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an MVPA Model — mvpa_model","text":"","code":"mod <- load_model(\"sda\") traindat <- neuroim2::NeuroVec(array(rnorm(6*6*6*100), c(6,6,6,100)), neuroim2::NeuroSpace(c(6,6,6,100))) mask <- neuroim2::LogicalNeuroVol(array(rnorm(6*6*6)>-.2, c(6,6,6)), neuroim2::NeuroSpace(c(6,6,6)))  mvdset <- mvpa_dataset(traindat,mask=mask) design <- data.frame(fac=rep(letters[1:4], 25), block=rep(1:10, each=10)) cval <- blocked_cross_validation(design$block) mvdes <- mvpa_design(design, ~ fac, block_var=~block)  custom_perf <- function(result) {   c(accuracy=sum(result$observed == result$predicted)/length(result$observed)) } mvpmod <- mvpa_model(mod, dataset=mvdset, design=mvdes, crossval=cval, performance=custom_perf) ret <- run_searchlight(mvpmod) #> INFO [2024-04-22 15:32:06] model is: sda #> INFO [2024-04-22 15:32:06] running randomized searchlight with 8 radius and 4 iterations #> INFO [2024-04-22 15:32:06] searchlight iteration: 1 #> INFO [2024-04-22 15:32:06] mvpa_iterate: compute analysis for batch 1 ... #> Number of variables: 127  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 0.9919  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 127 features. #> Number of variables: 127  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 0.8768  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 127 features. #> Number of variables: 127  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 0.9139  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 127 features. #> Number of variables: 127  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 0.9382  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 127 features. #> Number of variables: 127  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 0.9521  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 127 features. #> Number of variables: 127  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 1  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 127 features. #> Number of variables: 127  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 0.9832  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 127 features. #> Number of variables: 127  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 1  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 127 features. #> Number of variables: 127  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 1  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 127 features. #> Number of variables: 127  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 1  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 127 features. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> INFO [2024-04-22 15:32:07] searchlight iteration: 2 #> INFO [2024-04-22 15:32:07] mvpa_iterate: compute analysis for batch 1 ... #> Number of variables: 123  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 0.9822  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 123 features. #> Number of variables: 123  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 0.8811  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 123 features. #> Number of variables: 123  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 0.906  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 123 features. #> Number of variables: 123  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 0.9376  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 123 features. #> Number of variables: 123  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 0.9457  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 123 features. #> Number of variables: 123  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 1  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 123 features. #> Number of variables: 123  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 0.9706  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 123 features. #> Number of variables: 123  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 0.99  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 123 features. #> Number of variables: 123  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 1  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 123 features. #> Number of variables: 123  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 1  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 123 features. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> INFO [2024-04-22 15:32:07] mvpa_iterate: compute analysis for batch 2 ... #> Number of variables: 4  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 1  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 4 features. #> Number of variables: 4  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 0.6666  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 4 features. #> Number of variables: 4  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 1  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 4 features. #> Number of variables: 4  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 0.8191  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 4 features. #> Number of variables: 4  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 1  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 4 features. #> Number of variables: 4  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 0.599  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 4 features. #> Number of variables: 4  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 1  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 4 features. #> Number of variables: 4  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 1  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 4 features. #> Number of variables: 4  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 0.9471  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 4 features. #> Number of variables: 4  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 0.8865  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 4 features. #> INFO [2024-04-22 15:32:08] searchlight iteration: 3 #> INFO [2024-04-22 15:32:08] mvpa_iterate: compute analysis for batch 1 ... #> Number of variables: 127  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 0.9919  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 127 features. #> Number of variables: 127  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 0.8768  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 127 features. #> Number of variables: 127  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 0.9139  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 127 features. #> Number of variables: 127  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 0.9382  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 127 features. #> Number of variables: 127  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 0.9521  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 127 features. #> Number of variables: 127  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 1  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 127 features. #> Number of variables: 127  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 0.9832  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 127 features. #> Number of variables: 127  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 1  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 127 features. #> Number of variables: 127  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 1  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 127 features. #> Number of variables: 127  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 1  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 127 features. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> INFO [2024-04-22 15:32:08] searchlight iteration: 4 #> INFO [2024-04-22 15:32:08] mvpa_iterate: compute analysis for batch 1 ... #> Number of variables: 127  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 0.9919  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 127 features. #> Number of variables: 127  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 0.8768  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 127 features. #> Number of variables: 127  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 0.9139  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 127 features. #> Number of variables: 127  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 0.9382  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 127 features. #> Number of variables: 127  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 0.9521  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 127 features. #> Number of variables: 127  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 1  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 127 features. #> Number of variables: 127  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 0.9832  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 127 features. #> Number of variables: 127  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 1  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 127 features. #> Number of variables: 127  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 1  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 127 features. #> Number of variables: 127  #> Number of observations: 90  #> Number of classes: 4  #>  #> Estimating optimal shrinkage intensity lambda.freq (frequencies): 1  #> Estimating variances (pooled across classes) #> Estimating optimal shrinkage intensity lambda.var (variance vector): 1  #>  #>  #> Computing inverse correlation matrix (pooled across classes) #> Specified shrinkage intensity lambda (correlation matrix): 0  #> Prediction uses 127 features. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> Warning: Estimated correlation matrix doesn't have full rank - pseudoinverse used for inversion. #> INFO [2024-04-22 15:32:09] number of models fit: 5 stopifnot(\"accuracy\" %in% names(ret))"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/mvpa_surface_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"mvpa_surface_dataset — mvpa_surface_dataset","title":"mvpa_surface_dataset — mvpa_surface_dataset","text":"Construct MVPA dataset surface-based dataset.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/mvpa_surface_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mvpa_surface_dataset — mvpa_surface_dataset","text":"","code":"mvpa_surface_dataset(train_data, test_data = NULL, mask = NULL, name = \"\")"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/mvpa_surface_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mvpa_surface_dataset — mvpa_surface_dataset","text":"train_data training data, must inherit NeuroSurfaceVector neurosurf package. test_data optional test data, must inherit NeuroSurfaceVector neurosurf package. mask binary mask equal number nodes training/test data set. name label identify dataset (e.g. \"lh\" \"rh\" indicate hemisphere)","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/nobs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Number of Observations — nobs","title":"Get Number of Observations — nobs","text":"function retrieves number observations given object.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/nobs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Number of Observations — nobs","text":"","code":"nobs(x)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/nobs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Number of Observations — nobs","text":"x input object, can different types, data frame, matrix, custom object defined `nobs` method.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/nobs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Number of Observations — nobs","text":"number observations input object. Depending object type, number rows elements.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/nresponses.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of response categories — nresponses","title":"Number of response categories — nresponses","text":"Get number response categories category levels dependent variable.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/nresponses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of response categories — nresponses","text":"","code":"nresponses(x)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/nresponses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of response categories — nresponses","text":"x object extract number response categories.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/nresponses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of response categories — nresponses","text":"number response categories category levels dependent variable.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/pairwise_dist.cordist.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Pairwise Correlation Distances — pairwise_dist.cordist","title":"Compute Pairwise Correlation Distances — pairwise_dist.cordist","text":"method computes pairwise correlation distances matrix `X`, excluding comparisons within block specified `dist_obj$block`.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/pairwise_dist.cordist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Pairwise Correlation Distances — pairwise_dist.cordist","text":"","code":"# S3 method for cordist pairwise_dist(obj, X)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/pairwise_dist.cordist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Pairwise Correlation Distances — pairwise_dist.cordist","text":"X Numeric matrix rows represent observations columns represent variables. dist_obj list containing method (\"correlation\") block vector specify rows `X` compared avoid within-block correlation.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/pairwise_dist.cordist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Pairwise Correlation Distances — pairwise_dist.cordist","text":"object class `dist` containing computed correlation distances.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/pairwise_dist.cordist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Pairwise Correlation Distances — pairwise_dist.cordist","text":"","code":"X <- matrix(rnorm(100), 10, 10) block <- rep(1:2, each=5) dist_obj <- list(method = \"pearson\", block = block) dist_matrix <- pairwise_dist.correlation(dist_obj, X) #> Error in pairwise_dist.correlation(dist_obj, X): could not find function \"pairwise_dist.correlation\""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/pairwise_dist.euclidean.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Pairwise Euclidean Distances — pairwise_dist.euclidean","title":"Compute Pairwise Euclidean Distances — pairwise_dist.euclidean","text":"Computes pairwise Euclidean distances matrix `X`.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/pairwise_dist.euclidean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Pairwise Euclidean Distances — pairwise_dist.euclidean","text":"","code":"# S3 method for euclidean pairwise_dist(obj, X)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/pairwise_dist.euclidean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Pairwise Euclidean Distances — pairwise_dist.euclidean","text":"X Numeric matrix rows represent observations columns represent variables. dist_obj list containing possibly additional parameters, currently unused.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/pairwise_dist.euclidean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Pairwise Euclidean Distances — pairwise_dist.euclidean","text":"object class `dist` containing computed Euclidean distances.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/pairwise_dist.euclidean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Pairwise Euclidean Distances — pairwise_dist.euclidean","text":"","code":"X <- matrix(rnorm(100), 10, 10) dist_matrix <- pairwise_dist.euclidean(list(), X) #> Error in pairwise_dist.euclidean(list(), X): could not find function \"pairwise_dist.euclidean\""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/pairwise_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic Pairwise Distance Computation — pairwise_dist","title":"Generic Pairwise Distance Computation — pairwise_dist","text":"function acts generic interface computing pairwise distances rows matrix X. actual computation delegated method-specific functions depending class `dist_obj`.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/pairwise_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic Pairwise Distance Computation — pairwise_dist","text":"","code":"pairwise_dist(obj, X, ...)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/pairwise_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic Pairwise Distance Computation — pairwise_dist","text":"X numeric matrix row considered data point distances calculated. matrix contain missing values may affect accuracy performance distance computations. ... Additional arguments passed method-specific distance functions. dist_obj distance object specifies type distance measure used potentially contains additional parameters needed distance calculation. class `dist_obj` determines method dispatched.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/pairwise_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic Pairwise Distance Computation — pairwise_dist","text":"Depending specific method implementation, function typically returns numeric matrix object class `dist` representing pairwise distances rows `X`.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/pairwise_dist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic Pairwise Distance Computation — pairwise_dist","text":"`pairwise_dist` generic function meant interface various methods distance computation. Users must provide `dist_obj` includes specifics distance measure used. actual computation handled method-specific functions defined different classes `dist_obj`. functions must registered appropriate S3 method `pairwise_dist` `pairwise_dist.default`, `pairwise_dist.correlation`, etc.","code":""},{"path":[]},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/pairwise_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic Pairwise Distance Computation — pairwise_dist","text":"","code":"# Assuming a correlation-based distance object and matrix X dist_obj <- correlation_dist_object(parameters) #> Error in correlation_dist_object(parameters): could not find function \"correlation_dist_object\" X <- matrix(rnorm(100), ncol = 10) distances <- pairwise_dist(dist_obj, X) #> Error in eval(expr, envir, enclos): object 'dist_obj' not found"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/pairwise_dist.mahalanobis.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Pairwise Mahalanobis Distances — pairwise_dist.mahalanobis","title":"Compute Pairwise Mahalanobis Distances — pairwise_dist.mahalanobis","text":"Computes pairwise Mahalanobis distances using inverse covariance matrix estimated data matrix `X` shrinkage.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/pairwise_dist.mahalanobis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Pairwise Mahalanobis Distances — pairwise_dist.mahalanobis","text":"","code":"# S3 method for mahalanobis pairwise_dist(obj, X)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/pairwise_dist.mahalanobis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Pairwise Mahalanobis Distances — pairwise_dist.mahalanobis","text":"X Numeric matrix rows represent observations columns represent variables. dist_obj list might include additional parameters distance computation,  currently unused.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/pairwise_dist.mahalanobis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Pairwise Mahalanobis Distances — pairwise_dist.mahalanobis","text":"object class `dist` containing computed Mahalanobis distances.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/pairwise_dist.mahalanobis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Pairwise Mahalanobis Distances — pairwise_dist.mahalanobis","text":"","code":"X <- matrix(rnorm(100), 10, 10) dist_matrix <- pairwise_dist.mahalanobis(list(), X) #> Error in pairwise_dist.mahalanobis(list(), X): could not find function \"pairwise_dist.mahalanobis\""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/pairwise_dist.robustmahadist.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Pairwise Robust Mahalanobis Distances — pairwise_dist.robustmahadist","title":"Compute Pairwise Robust Mahalanobis Distances — pairwise_dist.robustmahadist","text":"Computes pairwise Mahalanobis distances using robustly estimated covariance matrix, can resistant outliers.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/pairwise_dist.robustmahadist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Pairwise Robust Mahalanobis Distances — pairwise_dist.robustmahadist","text":"","code":"# S3 method for robustmahadist pairwise_dist(obj, X)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/pairwise_dist.robustmahadist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Pairwise Robust Mahalanobis Distances — pairwise_dist.robustmahadist","text":"X Numeric matrix rows represent observations columns represent variables. dist_obj list might include additional parameters distance computation,  currently unused.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/pairwise_dist.robustmahadist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Pairwise Robust Mahalanobis Distances — pairwise_dist.robustmahadist","text":"object class `dist` containing computed robust Mahalanobis distances.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/pairwise_dist.robustmahadist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Pairwise Robust Mahalanobis Distances — pairwise_dist.robustmahadist","text":"","code":"X <- matrix(rnorm(100), 10, 10) dist_matrix <- pairwise_dist.robustmahadist(list(), X) #> Error in pairwise_dist.robustmahadist(list(), X): could not find function \"pairwise_dist.robustmahadist\""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/performance.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Performance Metrics for Classification/Regression Results — performance","title":"Compute Performance Metrics for Classification/Regression Results — performance","text":"function computes appropriate performance metrics (e.g., accuracy, AUC, RMSE) given classification/regression result.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/performance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Performance Metrics for Classification/Regression Results — performance","text":"","code":"performance(x, ...)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/performance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Performance Metrics for Classification/Regression Results — performance","text":"x classification/regression result object evaluate. ... Additional arguments passed specific performance evaluation method.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/performance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Performance Metrics for Classification/Regression Results — performance","text":"list performance metrics input classification/regression result object.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/performance.regression_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Performance Metrics for Regression Result — performance.regression_result","title":"Calculate Performance Metrics for Regression Result — performance.regression_result","text":"function calculates performance metrics regression result object, including R-squared, Root Mean Squared Error (RMSE), Spearman correlation.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/performance.regression_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Performance Metrics for Regression Result — performance.regression_result","text":"","code":"# S3 method for regression_result performance(x, split_list, ...)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/performance.regression_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Performance Metrics for Regression Result — performance.regression_result","text":"x regression_result object. split_list Split results indexed sub-groups (supported regression analyses yet). ... extra args (used).","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/performance.regression_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Performance Metrics for Regression Result — performance.regression_result","text":"named vector calculated performance metrics: R-squared, RMSE, Spearman correlation.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/performance.regression_result.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Performance Metrics for Regression Result — performance.regression_result","text":"function calculates following performance metrics given regression result object: - R-squared: proportion variance observed data predictable fitted model. - RMSE: root mean squared error, measure differences predicted observed values. - Spearman correlation: measure monotonic relationship predicted observed values.","code":""},{"path":[]},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/pool_randomized.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine randomized searchlight results by pooling — pool_randomized","title":"Combine randomized searchlight results by pooling — pool_randomized","text":"function combines randomized searchlight results pooling good results.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/pool_randomized.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine randomized searchlight results by pooling — pool_randomized","text":"","code":"pool_randomized(model_spec, good_results, bad_results)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/pool_randomized.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine randomized searchlight results by pooling — pool_randomized","text":"model_spec object specifying model used searchlight analysis. good_results data frame containing valid searchlight results. bad_results data frame containing invalid searchlight results.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/pool_randomized.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine randomized searchlight results by pooling — pool_randomized","text":"object containing combined searchlight results.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/predict.class_model_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"This function predicts class labels and probabilities for new data using a fitted model. — predict.class_model_fit","title":"This function predicts class labels and probabilities for new data using a fitted model. — predict.class_model_fit","text":"function predicts class labels probabilities new data using fitted model.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/predict.class_model_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function predicts class labels and probabilities for new data using a fitted model. — predict.class_model_fit","text":"","code":"# S3 method for class_model_fit predict(object, newdata, sub_indices = NULL, ...)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/predict.class_model_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function predicts class labels and probabilities for new data using a fitted model. — predict.class_model_fit","text":"object fitted model object class class_model_fit. newdata New data predict , either matrix NeuroVec NeuroSurfaceVector object. sub_indices subset row indices compute predictions (optional). ... Additional arguments passed underlying prediction function.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/predict.class_model_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function predicts class labels and probabilities for new data using a fitted model. — predict.class_model_fit","text":"list containing class predictions probabilities class attributes \"classification_prediction\", \"prediction\", \"list\".","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/predict.regression_model_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict continuous values for a new dataset using a regression model — predict.regression_model_fit","title":"Predict continuous values for a new dataset using a regression model — predict.regression_model_fit","text":"function predicts continuous values new data using fitted regression model.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/predict.regression_model_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict continuous values for a new dataset using a regression model — predict.regression_model_fit","text":"","code":"# S3 method for regression_model_fit predict(object, newdata, sub_indices = NULL, ...)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/predict.regression_model_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict continuous values for a new dataset using a regression model — predict.regression_model_fit","text":"object fitted model object class regression_model_fit. newdata New data predict , either matrix NeuroVec NeuroSurfaceVector object. sub_indices vector indices used subset rows `newdata` (optional). ... Additional arguments passed underlying prediction function.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/predict.regression_model_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict continuous values for a new dataset using a regression model — predict.regression_model_fit","text":"list containing predicted continuous values class attributes \"regression_prediction\", \"prediction\", \"list\".","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/predict.regression_model_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict continuous values for a new dataset using a regression model — predict.regression_model_fit","text":"","code":"# Assuming `fitted_model` is a fitted model object of class `regression_model_fit` new_data <- iris_dataset$test_data #> Error in eval(expr, envir, enclos): object 'iris_dataset' not found predictions <- predict(fitted_model, new_data) #> Error in eval(expr, envir, enclos): object 'fitted_model' not found"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/predicted_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Predicted Class from Probability Matrix — predicted_class","title":"Calculate the Predicted Class from Probability Matrix — predicted_class","text":"function calculates predicted class matrix predicted probabilities. class highest probability selected predicted class.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/predicted_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Predicted Class from Probability Matrix — predicted_class","text":"","code":"predicted_class(prob)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/predicted_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Predicted Class from Probability Matrix — predicted_class","text":"prob matrix predicted probabilities column names indicating classes.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/predicted_class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Predicted Class from Probability Matrix — predicted_class","text":"vector predicted classes corresponding highest probability row input matrix.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/prep_regional.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare regional data for MVPA analysis — prep_regional","title":"Prepare regional data for MVPA analysis — prep_regional","text":"function processes input data prepares regions MVPA analysis extracting voxel indices region interest (ROI) specified region_mask.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/prep_regional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare regional data for MVPA analysis — prep_regional","text":"","code":"prep_regional(model_spec, region_mask)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/prep_regional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare regional data for MVPA analysis — prep_regional","text":"model_spec model specification object. region_mask mask representing different regions brain image.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/prep_regional.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare regional data for MVPA analysis — prep_regional","text":"list containing information regions processing:   * allrois: vector unique ROI labels.   * region_vec: vector representation region_mask.   * region_set: sorted vector unique ROI labels region_mask.   * vox_iter: list containing voxel indices ROI.   * lens: vector containing number voxels ROI.   * keep: logical vector indicating ROI kept analysis (one voxel).","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/prep_regional.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare regional data for MVPA analysis — prep_regional","text":"","code":"# Create example inputs model_spec <- list(dataset = \"Example dataset\") region_mask <- matrix(c(rep(0, 5), rep(1, 5), rep(2, 5), rep(3, 5)), nrow = 5)  # Prepare regional data regional_data <- prep_regional(model_spec, region_mask) #> Error in model_spec$dataset$mask: $ operator is invalid for atomic vectors"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/prob_observed.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability of observed class — prob_observed","title":"Probability of observed class — prob_observed","text":"Extract predicted probability observed class.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/prob_observed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability of observed class — prob_observed","text":"","code":"prob_observed(x)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/prob_observed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability of observed class — prob_observed","text":"x object extract predicted probability observed class.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/prob_observed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability of observed class — prob_observed","text":"vector predicted probabilities observed class.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/rMVPA.html","id":null,"dir":"Reference","previous_headings":"","what":"rMVPA: A package for multi-voxel pattern analysis (MVPA) — rMVPA","title":"rMVPA: A package for multi-voxel pattern analysis (MVPA) — rMVPA","text":"rMVPA package provides tools running region--interest searchlight MVPA analyses.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/regional_mvpa_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a regional_mvpa_result instance — regional_mvpa_result","title":"Create a regional_mvpa_result instance — regional_mvpa_result","text":"Constructs regional MVPA result object stores results MVPA analysis specific region.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/regional_mvpa_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a regional_mvpa_result instance — regional_mvpa_result","text":"","code":"regional_mvpa_result(   model_spec,   performance_table,   prediction_table,   vol_results,   fits = fits )"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/regional_mvpa_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a regional_mvpa_result instance — regional_mvpa_result","text":"model_spec model specification object. performance_table data frame performance measures. prediction_table data frame prediction results. vol_results list voxel-level results. fits Optional model fits.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/regional_mvpa_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a regional_mvpa_result instance — regional_mvpa_result","text":"regional_mvpa_result object.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/regional_mvpa_result.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a regional_mvpa_result instance — regional_mvpa_result","text":"","code":"# Create example inputs model_spec <- list(dataset = \"Example dataset\") performance_table <- data.frame(accuracy = c(0.8, 0.85)) prediction_table <- data.frame(observed = factor(rep(letters[1:2], 5)),                                 predicted = factor(rep(letters[1:2], 5))) vol_results <- list(vol1 = \"Example vol_result 1\", vol2 = \"Example vol_result 2\") fits <- list(fit1 = \"Example fit 1\", fit2 = \"Example fit 2\")  # Construct a regional_mvpa_result regional_result <- regional_mvpa_result(model_spec, performance_table,                                         prediction_table, vol_results, fits = fits)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/regression_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Regression Result Object — regression_result","title":"Create a Regression Result Object — regression_result","text":"function creates regression result object containing observed predicted values, test design, test indices, predictor.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/regression_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Regression Result Object — regression_result","text":"","code":"regression_result(   observed,   predicted,   testind = NULL,   test_design = NULL,   predictor = NULL )"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/regression_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Regression Result Object — regression_result","text":"observed vector observed values. predicted vector predicted values. testind vector indices test data (optional). test_design test design (optional). predictor predictor used regression model (optional).","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/regression_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Regression Result Object — regression_result","text":"list class attributes \"regression_result\", \"classification_result\", \"list\" containing observed predicted values, test design, test indices, predictor.","code":""},{"path":[]},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/rsa_design.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a design for an RSA (Representational Similarity Analysis) model — rsa_design","title":"Construct a design for an RSA (Representational Similarity Analysis) model — rsa_design","text":"function constructs design RSA model using provided formula, data, optional parameters.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/rsa_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a design for an RSA (Representational Similarity Analysis) model — rsa_design","text":"","code":"rsa_design(   formula,   data,   block_var = NULL,   split_by = NULL,   keep_intra_run = FALSE )"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/rsa_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a design for an RSA (Representational Similarity Analysis) model — rsa_design","text":"formula formula expression specifying dissimilarity-based regression function. data named list containing dissimilarity matrices auxiliary variables. block_var optional formula, character name integer vector designating block structure. split_by optional formula indicating grouping structure evaluating test performance. keep_intra_run logical indicating whether exclude within-run comparisons.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/rsa_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a design for an RSA (Representational Similarity Analysis) model — rsa_design","text":"list containing elements RSA design, class attributes \"rsa_design\" \"list\".","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/rsa_design.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct a design for an RSA (Representational Similarity Analysis) model — rsa_design","text":"function creates RSA design based input parameters. checks validity input data handles splitting conditions evaluation test performance. also processes optional block structures within-run comparisons.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/rsa_design.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a design for an RSA (Representational Similarity Analysis) model — rsa_design","text":"","code":"dismat <- dist(matrix(rnorm(100*100), 100, 100)) rdes <- rsa_design(~ dismat, list(dismat=dismat))"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/rsa_iterate.html","id":null,"dir":"Reference","previous_headings":"","what":"rsa_iterate — rsa_iterate","title":"rsa_iterate — rsa_iterate","text":"Runs representational similarity analysis (RSA) voxel set list.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/rsa_iterate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rsa_iterate — rsa_iterate","text":"","code":"rsa_iterate(   mod_spec,   vox_list,   ids = 1:length(vox_list),   permute = FALSE,   regtype = c(\"pearson\", \"spearman\", \"lm\", \"rfit\"),   distmethod = c(\"spearman\", \"pearson\") )"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/rsa_iterate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rsa_iterate — rsa_iterate","text":"mod_spec object class rsa_model specifying RSA model. vox_list list voxel indices coordinates voxel set. ids vector IDs voxel set (defaults 1:length(vox_list)). permute Logical, whether permute labels (defaults FALSE). regtype character string specifying analysis method. One : \"pearson\", \"spearman\", \"lm\", \"rfit\" (defaults \"pearson\"). distmethod character string specifying method used compute distances observations. One : \"pearson\" \"spearman\" (defaults \"spearman\").","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/rsa_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct an RSA (Representational Similarity Analysis) model — rsa_model","title":"Construct an RSA (Representational Similarity Analysis) model — rsa_model","text":"function creates RSA model object taking MVPA (Multi-Variate Pattern Analysis) dataset RSA design.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/rsa_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct an RSA (Representational Similarity Analysis) model — rsa_model","text":"","code":"rsa_model(dataset, design)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/rsa_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct an RSA (Representational Similarity Analysis) model — rsa_model","text":"dataset instance mvpa_dataset. design instance rsa_design created rsa_design().","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/rsa_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct an RSA (Representational Similarity Analysis) model — rsa_model","text":"list two elements: dataset design, class attribute set \"rsa_model\" \"list\".","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/rsa_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct an RSA (Representational Similarity Analysis) model — rsa_model","text":"","code":"# Create a random MVPA dataset data <- matrix(rnorm(100 * 100), 100, 100) labels <- factor(rep(1:2, each = 50)) mvpa_data <- mvpa_dataset(data, labels) #> Error: train_data does not inherit from class NeuroVec  # Create an RSA design dismat <- dist(data) rdes <- rsa_design(~ dismat, list(dismat = dismat))  # Create an RSA model rsa_mod <- rsa_model(mvpa_data, rdes) #> Error in eval(expr, envir, enclos): object 'mvpa_data' not found"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/rsa_model_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a model matrix for an RSA (Representational Similarity Analysis) design — rsa_model_mat","title":"Construct a model matrix for an RSA (Representational Similarity Analysis) design — rsa_model_mat","text":"function constructs model matrix given RSA design processing distance matrices variables.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/rsa_model_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a model matrix for an RSA (Representational Similarity Analysis) design — rsa_model_mat","text":"","code":"rsa_model_mat(rsa_des)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/rsa_model_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a model matrix for an RSA (Representational Similarity Analysis) design — rsa_model_mat","text":"rsa_des RSA design object created rsa_design().","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/rsa_model_mat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a model matrix for an RSA (Representational Similarity Analysis) design — rsa_model_mat","text":"named list vectors, vector corresponding processed input data RSA design.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/rsa_model_mat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct a model matrix for an RSA (Representational Similarity Analysis) design — rsa_model_mat","text":"function takes RSA design object input processes distance matrices variables construct model matrix. handles different types input matrices, including symmetric asymmetric distance matrices, can include exclude within-run comparisons based RSA design.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/rsa_model_mat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a model matrix for an RSA (Representational Similarity Analysis) design — rsa_model_mat","text":"","code":"dismat <- dist(matrix(rnorm(100*100), 100, 100)) rdes <- rsa_design(~ dismat, list(dismat=dismat)) rsa_model_mat(rdes) #> Error in rsa_model_mat(rdes): could not find function \"rsa_model_mat\""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/run_regional.html","id":null,"dir":"Reference","previous_headings":"","what":"Region of interest based MVPA analysis — run_regional","title":"Region of interest based MVPA analysis — run_regional","text":"Run separate MVPA analysis multiple disjoint regions interest.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/run_regional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Region of interest based MVPA analysis — run_regional","text":"","code":"run_regional(model_spec, region_mask, ...)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/run_regional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Region of interest based MVPA analysis — run_regional","text":"model_spec mvpa_model instance containing model specifications. region_mask NeuroVol NeuroSurface object region identified unique integer. Every non-zero set positive integers used define set voxels classification analysis. ... Extra arguments passed specific regional analysis methods.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/run_regional.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Region of interest based MVPA analysis — run_regional","text":"named list results region interest.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/run_regional.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Region of interest based MVPA analysis — run_regional","text":"","code":"# TODO: Add an example"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/run_regional.mvpa_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Run regional MVPA analysis on a specified MVPA model — run_regional.mvpa_model","title":"Run regional MVPA analysis on a specified MVPA model — run_regional.mvpa_model","text":"function runs regional MVPA analysis using specified MVPA model region mask. analysis can customized return model fits, predictions, performance measures.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/run_regional.mvpa_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run regional MVPA analysis on a specified MVPA model — run_regional.mvpa_model","text":"","code":"# S3 method for mvpa_model run_regional(   model_spec,   region_mask,   return_fits = FALSE,   return_predictions = TRUE,   compute_performance = TRUE,   coalesce_design_vars = FALSE,   ... )"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/run_regional.mvpa_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run regional MVPA analysis on a specified MVPA model — run_regional.mvpa_model","text":"model_spec object type mvpa_model specifying MVPA model used. region_mask mask representing different regions brain image. return_fits Whether return model fit every ROI (default FALSE save memory). return_predictions Whether return full prediction table per trial probabilities (can large table, set FALSE limit memory use). compute_performance logical indicating whether compute performance measures (e.g. Accuracy, AUC). coalesce_design_vars Concatenate additional design variables output stored `prediction_table`. ... Additional arguments passed function.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/run_regional.mvpa_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run regional MVPA analysis on a specified MVPA model — run_regional.mvpa_model","text":"list type regional_mvpa_result containing named list NeuroVol objects, element contains performance metric labeled according metric used (e.g. Accuracy, AUC).","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/run_regional.rsa_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Run regional RSA analysis on a specified RSA model — run_regional.rsa_model","title":"Run regional RSA analysis on a specified RSA model — run_regional.rsa_model","text":"function runs regional RSA analysis using specified RSA model region mask. analysis can customized return model fits performance measures.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/run_regional.rsa_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run regional RSA analysis on a specified RSA model — run_regional.rsa_model","text":"","code":"# S3 method for rsa_model run_regional(   model_spec,   region_mask,   return_fits = FALSE,   compute_performance = TRUE,   regtype = c(\"pearson\", \"spearman\", \"lm\", \"rfit\"),   distmethod = c(\"pearson\", \"spearman\"),   coalesce_design_vars = FALSE,   ... )"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/run_regional.rsa_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run regional RSA analysis on a specified RSA model — run_regional.rsa_model","text":"model_spec object type rsa_model specifying RSA model used. region_mask mask representing different regions brain image. return_fits Whether return model fit every ROI (default FALSE save memory). compute_performance logical indicating whether compute performance measures (e.g. Accuracy, AUC). regtype regression method (\"pearson\", \"spearman\", \"lm\", \"rfit\"). distmethod distance computing method (\"pearson\" \"spearman\"). coalesce_design_vars Concatenate additional design variables output stored `prediction_table`. ... Additional arguments passed function.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/run_regional.rsa_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run regional RSA analysis on a specified RSA model — run_regional.rsa_model","text":"list type regional_mvpa_result containing named list NeuroVol objects, element contains performance metric labeled according metric used (e.g. Accuracy, AUC).","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/run_searchlight.html","id":null,"dir":"Reference","previous_headings":"","what":"run_searchlight — run_searchlight","title":"run_searchlight — run_searchlight","text":"Execute searchlight analysis. function runs searchlight analysis using specified MVPA model, radius, method. can customized combiner function permutation options. function runs searchlight analysis using specified RSA model, radius, method. can customized permutation options, distance computation methods, regression methods. function runs searchlight analysis using specified MANOVA model, radius, method. can customized permutation options. function runs searchlight analysis using specified vector RSA model, radius, method. can customized permutation options, distance computation methods, regression methods.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/run_searchlight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run_searchlight — run_searchlight","text":"","code":"run_searchlight(model_spec, radius, method, niter, ...)  # S3 method for mvpa_model run_searchlight(   model_spec,   radius = 8,   method = c(\"randomized\", \"standard\"),   niter = 4,   combiner = \"average\",   permute = FALSE,   ... )  # S3 method for rsa_model run_searchlight(   model_spec,   radius = 8,   method = c(\"randomized\", \"standard\"),   niter = 4,   permute = FALSE,   distmethod = c(\"spearman\", \"pearson\"),   regtype = c(\"pearson\", \"spearman\", \"lm\", \"rfit\"),   ... )  # S3 method for manova_model run_searchlight(   model_spec,   radius = 8,   method = c(\"randomized\", \"standard\"),   niter = 4,   permute = FALSE,   ... )  # S3 method for vector_rsa run_searchlight(   model_spec,   radius = 8,   method = c(\"randomized\", \"standard\"),   niter = 4,   permute = FALSE,   ... )"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/run_searchlight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run_searchlight — run_searchlight","text":"model_spec object type vector_rsa_model specifying vector RSA model used. radius radius searchlight sphere (default 8, allowable range: 1-100). method method used searchlight analysis (\"randomized\" \"standard\"). niter number iterations randomized searchlight (default 4). ... Additional arguments passed function. combiner function combines results appropriate output, one following strings: \"pool\" \"average\". permute Whether permute labels (default FALSE). distmethod method used compute distances searchlight samples (\"spearman\" \"pearson\"). regtype method used fit response predictor distance matrices (\"pearson\", \"spearman\", \"lm\", \"rfit\").","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/run_searchlight.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"run_searchlight — run_searchlight","text":"named list NeuroVol objects, element contains performance metric (e.g. AUC) every voxel location.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/run_searchlight.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"run_searchlight — run_searchlight","text":"Bjornsdotter, M., Rylander, K., & Wessberg, J. (2011). Monte Carlo method locally multivariate brain mapping. Neuroimage, 56(2), 508-516. Kriegeskorte, N., Goebel, R., & Bandettini, P. (2006). Information-based functional brain mapping. Proceedings National academy Sciences United States America, 103(10), 3863-3868.","code":""},{"path":[]},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/run_searchlight.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"run_searchlight — run_searchlight","text":"","code":"# TODO: Add an example   dataset <- gen_sample_dataset(c(4,4,4), 100, blocks=3) cval <- blocked_cross_validation(dataset$design$block_var) model <- load_model(\"sda_notune\") mspec <- mvpa_model(model, dataset$dataset, design=dataset$design, model_type=\"classification\", crossval=cval) res <- run_searchlight(mspec, radius=8, method=\"standard\") #> INFO [2024-04-22 15:32:13] model is: sda_notune #> INFO [2024-04-22 15:32:13] running standard searchlight with 8 radius  #> INFO [2024-04-22 15:32:13] creating standard searchlight #> INFO [2024-04-22 15:32:13] running standard searchlight iterator #> INFO [2024-04-22 15:32:13] mvpa_iterate: compute analysis for batch 1 ... #> INFO [2024-04-22 15:32:14] mvpa_iterate: compute analysis for batch 2 ... #> INFO [2024-04-22 15:32:14] mvpa_iterate: compute analysis for batch 3 ... #> INFO [2024-04-22 15:32:14] mvpa_iterate: compute analysis for batch 4 ... #> INFO [2024-04-22 15:32:15] mvpa_iterate: compute analysis for batch 5 ... #> INFO [2024-04-22 15:32:15] mvpa_iterate: compute analysis for batch 6 ... #> INFO [2024-04-22 15:32:16] mvpa_iterate: compute analysis for batch 7 ... #> INFO [2024-04-22 15:32:16] mvpa_iterate: compute analysis for batch 8 ... #> INFO [2024-04-22 15:32:17] mvpa_iterate: compute analysis for batch 9 ... #> INFO [2024-04-22 15:32:17] mvpa_iterate: compute analysis for batch 10 ... #> INFO [2024-04-22 15:32:18] mvpa_iterate: compute analysis for batch 11 ... #> INFO [2024-04-22 15:32:18] mvpa_iterate: compute analysis for batch 12 ... #> INFO [2024-04-22 15:32:19] mvpa_iterate: compute analysis for batch 13 ...  # A custom \"combiner\" can be used to post-process the output of the searchlight classifier for special cases. # In the example below, the supplied \"combining function\" extracts the predicted probability of the correct class  # for every voxel and every trial and then stores them in a data.frame.  if (FALSE) {  custom_combiner <- function(mspec, good, bad) {     good %>% pmap(function(result, id, ...) {       data.frame(trial=1:length(result$observed), id=id, prob=prob_observed(result))     }) %>% bind_rows() }  res2 <- run_searchlight(mspec, radius=8, method=\"standard\", combiner=custom_combiner) }"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/second_order_similarity.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Second-Order Similarity Scores — second_order_similarity","title":"Compute Second-Order Similarity Scores — second_order_similarity","text":"function calculates second order similarity two similarity vectors derived provided distance function applied matrix X reference similarity matrix S. calculation takes account blocking variable exclude comparisons within block.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/second_order_similarity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Second-Order Similarity Scores — second_order_similarity","text":"","code":"second_order_similarity(   dist_fun,   X,   D,   block,   method = c(\"pearson\", \"spearman\") )"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/second_order_similarity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Second-Order Similarity Scores — second_order_similarity","text":"dist_fun distance function object character string specifying  method used distance computation. function capable processing matrix X produce distance matrix. X numeric matrix row observation columns features. Distances computed pairwise rows matrix. D numeric matrix, typically predefined dissimilarity matrix serves reference compare computed distances X. block vector (numeric factor) indicating block group row X S. Comparisons made elements different blocks. method method used computing correlation similarity vectors. Defaults \"pearson\", \"spearman\" \"kendall\" also used.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/second_order_similarity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Second-Order Similarity Scores — second_order_similarity","text":"numeric vector similarity scores, one observation X,  representing correlation distance vectors derived X corresponding vectors S non-matching blocks.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/second_order_similarity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Second-Order Similarity Scores — second_order_similarity","text":"function computes distance matrix X using specified `dist_fun`. compares distances entries S observation, excluding comparisons within block defined `block` argument. useful evaluating well distances within X align external similarity standard, adjusting within-block dependencies.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/second_order_similarity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Second-Order Similarity Scores — second_order_similarity","text":"","code":"# Assuming X and S are numeric matrices and block is a factor or numeric vector dist_fun <- \"euclidean\"  # This should be defined or loaded from your package/environment X <- matrix(rnorm(100), ncol=10) D <- matrix(rnorm(100), ncol=10) block <- rep(1:5, each=20) scores <- second_order_similarity(dist_fun, X, D, block, method = \"pearson\") #> Error in pairwise_dist.default(dist_fun, X): pairwise_dist not implemented for objects of class matrix"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/select_features.FTest.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform feature selection using the F-test method — select_features.FTest","title":"Perform feature selection using the F-test method — select_features.FTest","text":"function selects features input data matrix X using F-test method provided feature selection specification.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/select_features.FTest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform feature selection using the F-test method — select_features.FTest","text":"","code":"# S3 method for FTest select_features(obj, X, Y, ...)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/select_features.FTest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform feature selection using the F-test method — select_features.FTest","text":"obj feature selection specification created feature_selector(). X input data matrix. Y response variable. ... extra args (used)","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/select_features.FTest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform feature selection using the F-test method — select_features.FTest","text":"logical vector indicating features retain.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/select_features.FTest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform feature selection using the F-test method — select_features.FTest","text":"F-test method computes one-way ANOVA every column feature matrix.","code":""},{"path":[]},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/select_features.FTest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform feature selection using the F-test method — select_features.FTest","text":"","code":"fsel <- feature_selector(\"FTest\", \"top_k\", 1000) X <- as.data.frame(matrix(rnorm(100 * 10), 100, 10)) Y <- rep(letters[1:5], 20) selected_features <- select_features(fsel, X, Y) #> selecting features via FTest #> cutoff type top_k #> cutoff value 1000 #> Warning: NAs introduced by coercion #> Warning: missing values for 'group' #> retaining 10 features in matrix with 10 columns"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/select_features.catscore.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform feature selection using the CATSCORE method — select_features.catscore","title":"Perform feature selection using the CATSCORE method — select_features.catscore","text":"function selects features input data matrix X using CATSCORE method provided feature selection specification.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/select_features.catscore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform feature selection using the CATSCORE method — select_features.catscore","text":"","code":"# S3 method for catscore select_features(obj, X, Y, ranking.score = c(\"entropy\", \"avg\", \"max\"), ...)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/select_features.catscore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform feature selection using the CATSCORE method — select_features.catscore","text":"obj feature selection specification created feature_selector(). X input data matrix. Y response variable. ranking.score feature score use. Supported scores \"entropy\", \"avg\", \"max\". Default \"entropy\".","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/select_features.catscore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform feature selection using the CATSCORE method — select_features.catscore","text":"logical vector indicating features retain.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/select_features.catscore.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform feature selection using the CATSCORE method — select_features.catscore","text":"CATSCORE method computes correlation adjusted t-test every column matrix using sda.ranking sda package.","code":""},{"path":[]},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/select_features.catscore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform feature selection using the CATSCORE method — select_features.catscore","text":"","code":"fsel <- feature_selector(\"catscore\", \"top_k\", 1000) X <- as.data.frame(matrix(rnorm(100 * 10), 100, 10)) Y <- rep(letters[1:5], 20) selected_features <- select_features(fsel, X, Y, ranking.score = \"entropy\") #> selecting features via catscore #> retaining 10 features in matrix with 10 columns"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/select_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Select Features — select_features","title":"Select Features — select_features","text":"Given feature_selection specification object dataset, returns set selected features binary vector.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/select_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select Features — select_features","text":"","code":"select_features(obj, X, Y, ...)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/select_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select Features — select_features","text":"obj feature_selection object specifying feature selection method parameters. X dataset containing training features. can matrix ROIVolume ROISurface object. Y dependent variable factor numeric variable. ... Additional arguments passed method-specific function.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/select_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select Features — select_features","text":"logical vector indicating columns X matrix selected.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/select_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select Features — select_features","text":"","code":"fsel <- feature_selector(\"FTest\", \"top_k\", 2) coords <- rbind(c(1,1,1), c(2,2,2), c(3,3,3)) ROI <- neuroim2::ROIVec(neuroim2::NeuroSpace(c(10,10,10)), coords=coords, matrix(rnorm(100*3), 100, 3)) Y <- factor(rep(c(\"a\", \"b\"), each=50)) featureMask <- select_features(fsel, neuroim2::values(ROI), Y) #> selecting features via FTest #> cutoff type top_k #> cutoff value 2 #> retaining 2 features in matrix with 3 columns sum(featureMask) == 2 #> [1] TRUE  fsel2 <- feature_selector(\"FTest\", \"top_p\", .1) featureMask <- select_features(fsel2, neuroim2::values(ROI), Y) #> selecting features via FTest #> cutoff type top_p #> cutoff value 0.1 #> retaining 1 features in matrix with 3 columns"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/sub_result.binary_classification_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset Binary Classification Result — sub_result.binary_classification_result","title":"Subset Binary Classification Result — sub_result.binary_classification_result","text":"function subsets binary classification result based provided indices.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/sub_result.binary_classification_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset Binary Classification Result — sub_result.binary_classification_result","text":"","code":"# S3 method for binary_classification_result sub_result(x, indices)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/sub_result.binary_classification_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset Binary Classification Result — sub_result.binary_classification_result","text":"x object class binary_classification_result containing binary classification results. indices set indices used subset results.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/sub_result.binary_classification_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset Binary Classification Result — sub_result.binary_classification_result","text":"binary_classification_result object containing subset results specified indices.","code":""},{"path":[]},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/sub_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Row-wise Subset of a Result Object — sub_result","title":"Extract Row-wise Subset of a Result Object — sub_result","text":"function extracts row-wise subset classification regression result object.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/sub_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Row-wise Subset of a Result Object — sub_result","text":"","code":"sub_result(x, indices)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/sub_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Row-wise Subset of a Result Object — sub_result","text":"x input result object, instance classification regression result class. indices vector row indices extract result object.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/sub_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Row-wise Subset of a Result Object — sub_result","text":"new result object containing specified row indices input result object.","code":""},{"path":[]},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/sub_result.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Row-wise Subset of a Result Object — sub_result","text":"","code":"# Create a simple classification result object observed <- c(1, 0, 1, 1, 0) predicted <- c(1, 0, 0, 1, 1) result <- list(observed = observed, predicted = predicted) class(result) <- c(\"classification_result\", \"list\")  # Extract a subset of the result object sub_result(result, c(2, 3, 4)) #> Error in UseMethod(\"sub_result\"): no applicable method for 'sub_result' applied to an object of class \"c('classification_result', 'list')\""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/sub_result.multiway_classification_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset Multiway Classification Result — sub_result.multiway_classification_result","title":"Subset Multiway Classification Result — sub_result.multiway_classification_result","text":"function subsets multiway classification result based provided indices.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/sub_result.multiway_classification_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset Multiway Classification Result — sub_result.multiway_classification_result","text":"","code":"# S3 method for multiway_classification_result sub_result(x, indices)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/sub_result.multiway_classification_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset Multiway Classification Result — sub_result.multiway_classification_result","text":"x object class multiway_classification_result containing multiway classification results. indices set indices used subset results.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/sub_result.multiway_classification_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset Multiway Classification Result — sub_result.multiway_classification_result","text":"multiway_classification_result object containing subset results specified indices.","code":""},{"path":[]},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/test_design.html","id":null,"dir":"Reference","previous_headings":"","what":"Test Design Extraction — test_design","title":"Test Design Extraction — test_design","text":"Return design table associated test set object.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/test_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test Design Extraction — test_design","text":"","code":"test_design(obj)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/test_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test Design Extraction — test_design","text":"obj object extract test design table.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/train_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Train Model — train_model","title":"Train Model — train_model","text":"Train classification regression model.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/train_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train Model — train_model","text":"","code":"train_model(obj, ...)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/train_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train Model — train_model","text":"obj model specification object. ... Additional arguments passed method-specific function.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/train_model.manova_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Train a MANOVA Model — train_model.manova_model","title":"Train a MANOVA Model — train_model.manova_model","text":"function trains multivariate analysis variance (MANOVA) model using specified design.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/train_model.manova_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train a MANOVA Model — train_model.manova_model","text":"","code":"# S3 method for manova_model train_model(obj, train_dat, indices, ...)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/train_model.manova_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train a MANOVA Model — train_model.manova_model","text":"obj object class manova_model. train_dat training data. indices indices training data. ... Additional arguments passed training method.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/train_model.manova_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train a MANOVA Model — train_model.manova_model","text":"named numeric vector -log(p-values) predictor MANOVA model.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/train_model.mvpa_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Train an MVPA Model — train_model.mvpa_model","title":"Train an MVPA Model — train_model.mvpa_model","text":"function trains Multi-Variate Pattern Analysis (MVPA) model provided data, taking care feature selection, parameter tuning, model fitting.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/train_model.mvpa_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train an MVPA Model — train_model.mvpa_model","text":"","code":"# S3 method for mvpa_model train_model(   obj,   train_dat,   y,   indices,   param = NULL,   wts = NULL,   tune_reps = 10,   ... )"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/train_model.mvpa_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train an MVPA Model — train_model.mvpa_model","text":"obj object class mvpa_model, specifying MVPA problem. train_dat Training data, instance class ROIVolume ROISurface. y dependent variable (response variable), either numeric vector factor. indices spatial indices associated column. param Optional tuning parameters (default: NULL). provided, function perform tuning using tune_grid. wts Optional case weights (default: NULL). tune_reps number bootstrap replications parameter tuning (default: 10), used param NULL. ... Additional arguments passed methods.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/train_model.mvpa_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train an MVPA Model — train_model.mvpa_model","text":"model fit object containing trained model, fit, model type (classification regression), best tuning parameters, voxel indices, feature mask.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/train_model.rsa_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Train an RSA Model — train_model.rsa_model","title":"Train an RSA Model — train_model.rsa_model","text":"function trains RSA (representational similarity analysis) model using specified method distance calculation.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/train_model.rsa_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train an RSA Model — train_model.rsa_model","text":"","code":"# S3 method for rsa_model train_model(   obj,   train_dat,   indices,   wts = NULL,   method = c(\"lm\", \"rfit\", \"pearson\", \"spearman\"),   distmethod = c(\"pearson\", \"spearman\"),   ... )"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/train_model.rsa_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train an RSA Model — train_model.rsa_model","text":"obj object class rsa_model. train_dat training data. indices indices training data. wts Optional, weights model training. method method used model training. One \"lm\" (linear regression), \"rfit\" (robust regression), \"pearson\" (Pearson correlation), \"spearman\" (Spearman correlation). Default \"lm\". distmethod method used distance calculation. One \"pearson\" (Pearson correlation) \"spearman\" (Spearman correlation). Default \"pearson\". ... Additional arguments passed training method.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/train_model.rsa_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train an RSA Model — train_model.rsa_model","text":"trained model.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/train_model.vector_rsa_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Train a vector RSA model — train_model.vector_rsa_model","title":"Train a vector RSA model — train_model.vector_rsa_model","text":"Train vector RSA model","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/train_model.vector_rsa_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train a vector RSA model — train_model.vector_rsa_model","text":"","code":"# S3 method for vector_rsa_model train_model(obj, roi, ...)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/train_model.vector_rsa_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train a vector RSA model — train_model.vector_rsa_model","text":"obj object class vector_rsa_model. roi region interest ... addiitonal arguments X data matrix rows correspond trials.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/tune_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Tune Grid Extraction — tune_grid","title":"Tune Grid Extraction — tune_grid","text":"Extract parameter grid optimize model.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/tune_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tune Grid Extraction — tune_grid","text":"","code":"tune_grid(obj, x, y, len)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/tune_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tune Grid Extraction — tune_grid","text":"obj model object. x training data. y response vector. len number elements tuning grid.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/tune_model.html","id":null,"dir":"Reference","previous_headings":"","what":"This function finds the best hyperparameters for a given model specification using a specified tuning grid and cross-validation. — tune_model","title":"This function finds the best hyperparameters for a given model specification using a specified tuning grid and cross-validation. — tune_model","text":"function finds best hyperparameters given model specification using specified tuning grid cross-validation.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/tune_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function finds the best hyperparameters for a given model specification using a specified tuning grid and cross-validation. — tune_model","text":"","code":"tune_model(mspec, x, y, wts, param, nreps = 10)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/tune_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function finds the best hyperparameters for a given model specification using a specified tuning grid and cross-validation. — tune_model","text":"mspec model specification derived mvpa_model class. x training data matrix. y response vector. wts Optional class weights (underlying model supports ). param data.frame representing tuning grid, parameter names indicated column names. nreps number bootstrap replications (default 10).","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/tune_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function finds the best hyperparameters for a given model specification using a specified tuning grid and cross-validation. — tune_model","text":"data frame containing best hyperparameter values.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/twofold_blocked_cross_validation.html","id":null,"dir":"Reference","previous_headings":"","what":"twofold_blocked_cross_validation — twofold_blocked_cross_validation","title":"twofold_blocked_cross_validation — twofold_blocked_cross_validation","text":"Construct cross-validation specification randomly partitions input set two sets blocks.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/twofold_blocked_cross_validation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"twofold_blocked_cross_validation — twofold_blocked_cross_validation","text":"","code":"twofold_blocked_cross_validation(block_var, nreps = 10)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/twofold_blocked_cross_validation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"twofold_blocked_cross_validation — twofold_blocked_cross_validation","text":"block_var integer vector representing cross-validation blocks. block indicated unique integer. nreps integer specifying number repetitions twofold split.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/twofold_blocked_cross_validation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"twofold_blocked_cross_validation — twofold_blocked_cross_validation","text":"object class \"twofold_blocked_cross_validation\", \"cross_validation\", \"list\" containing block_var,   nfolds (fixed 2 function), nreps, block_ind.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/twofold_blocked_cross_validation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"twofold_blocked_cross_validation — twofold_blocked_cross_validation","text":"function creates cross-validation scheme cases data organized blocks, blocks divided two groups evaluation. approach can useful inherent structure dependency within blocks, separating can help avoid biased estimates model performance. returns object class \"twofold_blocked_cross_validation\", \"cross_validation\", \"list\".","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/twofold_blocked_cross_validation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"twofold_blocked_cross_validation — twofold_blocked_cross_validation","text":"","code":"blockvar <- rep(1:5, each=10) nreps <- 5 cval <- twofold_blocked_cross_validation(blockvar, nreps=nreps) samples <- crossval_samples(cval, as.data.frame(matrix(rnorm(50*50),50,50)), y=rep(letters[1:5],10)) stopifnot(nrow(samples) == nreps)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/vector_rsa_design.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a design for a vectorized RSA model — vector_rsa_design","title":"Construct a design for a vectorized RSA model — vector_rsa_design","text":"function constructs design RSA model using single distance matrix, labels, blocks.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/vector_rsa_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a design for a vectorized RSA model — vector_rsa_design","text":"","code":"vector_rsa_design(D, labels, block_var)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/vector_rsa_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a design for a vectorized RSA model — vector_rsa_design","text":"D representational disssimilarity matrix row.names indicating labels. labels character vector labels corresponding rows another dataset X. block_var vector indicating block (strata) label belongs .","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/vector_rsa_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a design for a vectorized RSA model — vector_rsa_design","text":"list containing elements RSA design, class attributes \"vector_rsa_design\" \"list\".","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/vector_rsa_design.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct a design for a vectorized RSA model — vector_rsa_design","text":"function verifies labels 'labels' present row.names 'D'. also sets precomputing cross-block pairs needed.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/vector_rsa_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a vectorized RSA model — vector_rsa_model","title":"Create a vectorized RSA model — vector_rsa_model","text":"function integrates vector_rsa_design precomputes data create vectorized RSA model.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/vector_rsa_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a vectorized RSA model — vector_rsa_model","text":"","code":"vector_rsa_model(   dataset,   design,   distfun = cordist(),   rsa_simfun = c(\"pearson\", \"spearman\") )"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/vector_rsa_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a vectorized RSA model — vector_rsa_model","text":"dataset mvpa_dataset  object. design vector_rsa_design object. distfun object distfun type computation pairwise dissimilarities among image rows","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/vector_rsa_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a vectorized RSA model — vector_rsa_model","text":"object representing RSA model, includes design precomputed data.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/vector_rsa_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a vectorized RSA model — vector_rsa_model","text":"Integrates RSA design precomputed data facilitate efficient RSA computations.  directly incorporates precomputations cross-block comparisons.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/weighted_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Weighted Consensus Model — weighted_model","title":"Create a Weighted Consensus Model — weighted_model","text":"Constructs weighted consensus model formed weighted average set models. consensus model combines input models according respective weights.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/weighted_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Weighted Consensus Model — weighted_model","text":"","code":"weighted_model(   fits,   names = 1:length(fits),   weights = rep(1/length(fits), length(fits)) )"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/weighted_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Weighted Consensus Model — weighted_model","text":"fits list model fits combined. names optional list names, one per model fit (default: numeric indices). weights vector weights, one per model fit, sum 1 (default: equal weights models).","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/weighted_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Weighted Consensus Model — weighted_model","text":"object class weighted_model, containing list model fits, names, assigned weights. object also assigned class `list`.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/weighted_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Weighted Consensus Model — weighted_model","text":"","code":"# Create two sample model fits fit1 <- list(model = \"model1\", y = c(0, 1), fit = \"fit1\") fit2 <- list(model = \"model2\", y = c(1, 0), fit = \"fit2\")  # Combine the model fits into a weighted consensus model w_model <- weighted_model(fits = list(fit1, fit2), names = c(\"model1\", \"model2\"), weights = c(0.6, 0.4)) #> Error in weighted_model(fits = list(fit1, fit2), names = c(\"model1\", \"model2\"),     weights = c(0.6, 0.4)): could not find function \"weighted_model\""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/wrap_out.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap output results — wrap_out","title":"Wrap output results — wrap_out","text":"function wraps output results performance matrix list SparseNeuroVec objects column performance matrix.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/wrap_out.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap output results — wrap_out","text":"","code":"wrap_out(perf_mat, dataset, ids = NULL)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/wrap_out.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap output results — wrap_out","text":"perf_mat performance matrix containing classifier results. dataset dataset object containing dataset information. ids optional vector voxel IDs.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/wrap_out.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrap output results — wrap_out","text":"named list SparseNeuroVec objects representing wrapped output results.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/wrap_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap output values into a desired format — wrap_output","title":"Wrap output values into a desired format — wrap_output","text":"wrap_output function generic function takes object, values wrapped, additional arguments create wrapped output based provided object values.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/wrap_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap output values into a desired format — wrap_output","text":"","code":"wrap_output(obj, vals, ...)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/wrap_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap output values into a desired format — wrap_output","text":"obj object used determine appropriate method wrapping output. vals values wrapped. ... Additional arguments passed function.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/wrap_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrap output values into a desired format — wrap_output","text":"wrapped output based provided object values.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/y_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Test Labels/Response Extraction — y_test","title":"Test Labels/Response Extraction — y_test","text":"Extract test labels response variable object.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/y_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test Labels/Response Extraction — y_test","text":"","code":"y_test(obj)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/y_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test Labels/Response Extraction — y_test","text":"obj object extract test response variable.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/y_train.html","id":null,"dir":"Reference","previous_headings":"","what":"Training Labels/Response Extraction — y_train","title":"Training Labels/Response Extraction — y_train","text":"Extract training labels response variable object.","code":""},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/y_train.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Training Labels/Response Extraction — y_train","text":"","code":"y_train(obj)"},{"path":"http://bbuchsbaum.github.io/rMVPA/reference/y_train.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Training Labels/Response Extraction — y_train","text":"obj object extract training response variable.","code":""}]
