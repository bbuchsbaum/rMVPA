% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/temporal_rdms.R
\name{temporal_rdm}
\alias{temporal_rdm}
\title{Temporal/ordinal nuisance RDM (trial-level)}
\usage{
temporal_rdm(
  index,
  block = NULL,
  kernel = c("adjacent", "boxcar", "linear", "poly", "exp", "gauss"),
  width = 1L,
  power = 1,
  lambda = 1,
  sigma = 1,
  within_blocks_only = TRUE,
  wrap = FALSE,
  normalize = c("rank", "z", "none"),
  as_dist = TRUE
)
}
\arguments{
\item{index}{numeric or integer vector representing trial order or time (length N observations)}

\item{block}{optional vector (length N) of run/block identifiers}

\item{kernel}{character string specifying the kernel type, one of:
\itemize{
  \item{"adjacent"}{Binary kernel for immediate neighbors within specified width}
  \item{"boxcar"}{Binary kernel including diagonal up to specified width}
  \item{"linear"}{Linear decay based on lag}
  \item{"poly"}{Polynomial decay with specified power}
  \item{"exp"}{Exponential decay with specified lambda}
  \item{"gauss"}{Gaussian decay with specified sigma}
}}

\item{width}{integer window for "adjacent"/"boxcar" kernels (default 1)}

\item{power}{exponent for "poly" kernel (default 1)}

\item{lambda}{decay constant for "exp" kernel (default 1)}

\item{sigma}{standard deviation for "gauss" kernel (default 1)}

\item{within_blocks_only}{logical; if TRUE, zero nuisance across blocks (default TRUE)}

\item{wrap}{logical; if TRUE, treat index as circular (default FALSE)}

\item{normalize}{character string specifying normalization method:
\itemize{
  \item{"rank"}{Rank transform (ties averaged)}
  \item{"z"}{Z-score normalization}
  \item{"none"}{No normalization}
}}

\item{as_dist}{logical; if TRUE return a \code{dist} object, otherwise return matrix (default TRUE)}
}
\value{
A \code{dist} object or symmetric matrix (N x N) with 0 on the diagonal,
  representing temporal/ordinal relationships between observations
}
\description{
Creates a temporal or ordinal nuisance representational dissimilarity matrix (RDM) 
for use in RSA analyses. This function generates various kernels to model temporal
proximity effects in neuroimaging data.
}
\details{
This function creates temporal nuisance RDMs for modeling carry-over effects,
scanner drift, or other temporal confounds in fMRI data. The resulting RDM
can be included as a nuisance regressor in RSA models to account for temporal
proximity effects while preserving statistical power.
}
\examples{
# Create temporal RDM for 20 trials across 4 runs
trial_index <- 1:20
run_labels <- rep(1:4, each = 5)

# Exponential decay kernel within runs only
temp_rdm <- temporal_rdm(trial_index, block = run_labels, 
                         kernel = "exp", lambda = 2,
                         within_blocks_only = TRUE)

# Use in RSA design
\dontrun{
rdes <- rsa_design(~ task_rdm + temporal_rdm(trial_idx, block=run, kernel="adjacent"),
                   data = list(task_rdm = my_task_rdm,
                              trial_idx = seq_len(n_trials),
                              run = run_ids),
                   block_var = ~ run,
                   keep_intra_run = TRUE)
}

}
