% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rsa_model.R
\name{train_model.rsa_model}
\alias{train_model.rsa_model}
\title{Train an RSA Model}
\usage{
\method{train_model}{rsa_model}(obj, train_dat, y, indices, ...)
}
\arguments{
\item{obj}{An object of class \code{rsa_model}.}

\item{train_dat}{The training data.}

\item{y}{The response variable.}

\item{indices}{The indices of the training data.}

\item{...}{Additional arguments passed to the training method.}
}
\value{
Depending on \code{obj$regtype}:
\itemize{
  \item \code{"lm"} + no constraints + \code{obj$semipartial=TRUE}: semi-partial correlations
  \item \code{"lm"} + no constraints + \code{obj$semipartial=FALSE}: T-values of each predictor
  \item \code{"lm"} + \code{nneg} constraints: raw coefficients from constrained \code{glmnet}
  \item \code{"rfit"}: robust regression coefficients
  \item \code{"pearson"} or \code{"spearman"}: correlation coefficients
}
}
\description{
This function trains an RSA (representational similarity analysis) model using the specified method and distance calculation.
}
\examples{
\donttest{
  dset_info <- gen_sample_dataset(D = c(8, 8, 8), nobs = 20,
    response_type = "categorical", data_mode = "image", nlevels = 2)
  dismat <- dist(matrix(rnorm(20 * 20), 20, 20))
  rdes <- rsa_design(~ dismat, list(dismat = dismat))
  rsa_mod <- rsa_model(dset_info$dataset, rdes, regtype = "lm")
  train_model(rsa_mod, dset_info$dataset$train_data,
    dset_info$design$y_train,
    indices = seq_len(ncol(dset_info$dataset$train_data)))
}
}
