% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/allgeneric.R, R/searchlight.R
\name{run_searchlight}
\alias{run_searchlight}
\alias{run_searchlight.model_spec}
\alias{run_searchlight.vector_rsa}
\title{Run Searchlight Analysis}
\usage{
run_searchlight(
  model_spec,
  radius,
  method = c("standard", "randomized"),
  niter = NULL,
  ...
)

\method{run_searchlight}{model_spec}(
  model_spec,
  radius = 8,
  method = c("randomized", "standard"),
  niter = 4,
  combiner = "average",
  ...
)

\method{run_searchlight}{vector_rsa}(
  model_spec,
  radius = 8,
  method = c("randomized", "standard"),
  niter = 4,
  ...
)
}
\arguments{
\item{model_spec}{An object of type \code{vector_rsa_model} specifying the vector RSA model to be used.}

\item{radius}{The radius of the searchlight sphere (default is 8, allowable range: 1-100).}

\item{method}{The method used for the searchlight analysis ("randomized" or "standard").}

\item{niter}{The number of iterations for randomized searchlight (default is 4).}

\item{...}{Additional arguments to be passed to the function.}

\item{combiner}{A function that combines results into an appropriate output, or one of the following strings: "pool" or "average".}
}
\value{
A named list of \code{NeuroVol} objects containing performance metrics (e.g., AUC) at each voxel location
}
\description{
Execute a searchlight analysis using multivariate pattern analysis.

This function runs a searchlight analysis using a specified MVPA model, radius, and method.
It can be customized with a combiner function and permutation options.

This function runs a searchlight analysis using a specified vector RSA model, radius, and method.
It can be customized with permutation options, distance computation methods, and regression methods.
}
\examples{
\donttest{
  # Generate sample dataset with categorical response
  dataset <- gen_sample_dataset(
    D = c(8,8,8),           # 8x8x8 volume
    nobs = 100,             # 100 observations
    response_type = "categorical",
    data_mode = "image",
    blocks = 3,             # 3 blocks for cross-validation
    nlevels = 2             # binary classification
  )
  
  # Create cross-validation specification using blocks
  cval <- blocked_cross_validation(dataset$design$block_var)
  
  # Load the SDA classifier (Shrinkage Discriminant Analysis)
  model <- load_model("sda_notune")
  
  # Create MVPA model
  mspec <- mvpa_model(
    model = model,
    dataset = dataset$dataset,
    design = dataset$design,
    model_type = "classification",
    crossval = cval
  )
  
  # Run searchlight analysis
  results <- run_searchlight(
    mspec,
    radius = 8,            # 8mm radius
    method = "standard"    # Use standard searchlight
  )
  
  # Results contain performance metrics
  # Access them with results$performance
}

 
dataset <- gen_sample_dataset(c(4,4,4), 100, blocks=3)
cval <- blocked_cross_validation(dataset$design$block_var)
model <- load_model("sda_notune")
mspec <- mvpa_model(model, dataset$dataset, design=dataset$design, model_type="classification", crossval=cval)
res <- run_searchlight(mspec, radius=8, method="standard")

# A custom "combiner" can be used to post-process the output of the searchlight classifier for special cases.
# In the example below, the supplied "combining function" extracts the predicted probability of the correct class 
# for every voxel and every trial and then stores them in a data.frame.

\dontrun{ 
custom_combiner <- function(mspec, good, bad) { 
   good \%>\% pmap(function(result, id, ...) { 
     data.frame(trial=1:length(result$observed), id=id, prob=prob_observed(result)) 
   }) \%>\% bind_rows()
}

res2 <- run_searchlight(mspec, radius=8, method="standard", combiner=custom_combiner)
}
}
\references{
Bjornsdotter, M., Rylander, K., & Wessberg, J. (2011). A Monte Carlo method for locally multivariate brain mapping. Neuroimage, 56(2), 508-516.

Kriegeskorte, N., Goebel, R., & Bandettini, P. (2006). Information-based functional brain mapping. Proceedings of the National academy of Sciences of the United States of America, 103(10), 3863-3868.
}
