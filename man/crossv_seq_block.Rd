% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/crossval.R
\name{crossv_seq_block}
\alias{crossv_seq_block}
\title{Sequential Block Cross-Validation Data Preparation}
\usage{
crossv_seq_block(
  data,
  y,
  nfolds,
  block_var,
  nreps = 4,
  block_ind = NULL,
  id = ".id"
)
}
\arguments{
\item{data}{A data frame containing the training data.}

\item{y}{A response vector.}

\item{nfolds}{An integer specifying the number of folds for cross-validation.}

\item{block_var}{An integer vector defining the cross-validation blocks.}

\item{nreps}{An integer specifying the number of repetitions for each fold.}

\item{block_ind}{An optional integer vector specifying the ordered ids of the blocks.}

\item{id}{A character string specifying the identifier for the output data frame.}
}
\value{
A tibble containing the training and testing data, response vectors, and fold IDs for each fold and repetition.
}
\description{
This function prepares the data for sequential block cross-validation by dividing the dataset
based on the provided block variable. It creates subsets of training and testing
data for each block using sequential sampling within the blocks, without performing any analysis or fitting models.
}
\details{
The function first checks if the length of the `block_var` vector matches the length of the response vector `y`.
It then creates a list of block indices and generates a fold sequence using the provided `nfolds` and `nreps` parameters.

For each repetition and fold, the function identifies the indices corresponding to the test data and creates the
corresponding training and testing data sets.
}
\examples{
X <- data.frame(x1=rnorm(100), x2=rnorm(100))
y <- rep(letters[1:4], 25)
block_var <- rep(1:4, each=25)
cv <- crossv_seq_block(X,y,2, block_var)
}
