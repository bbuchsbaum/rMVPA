% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/contrast_rsa_model.R
\name{train_model.contrast_rsa_model}
\alias{train_model.contrast_rsa_model}
\title{Train method for contrast_rsa_model}
\usage{
\method{train_model}{contrast_rsa_model}(obj, sl_data, sl_info, cv_spec, ...)
}
\arguments{
\item{obj}{An object of class \code{contrast_rsa_model}.}

\item{sl_data}{The data matrix for the current searchlight (samples x voxels).}

\item{sl_info}{A list containing information about the current searchlight,
including \code{center_local_id}, the column index of the center voxel within \code{sl_data}.}

\item{cv_spec}{The cross-validation specification object (e.g., from \code{\\link{blocked_cross_validation}}).}

\item{...}{Additional arguments (currently ignored).}
}
\value{
A named list where each element corresponds to a requested `output_metric` from the `obj$output_metric` vector.
  Each element is:
  \itemize{
    \item For metrics like "beta_delta", "beta_only", "delta_only": A Q-length named vector where
          values are indexed by contrast and names match the contrast_matrix column names (Q = number of contrasts)
    \item For metrics like "recon_score", "composite": A single numeric value
  }
  The list will have an attribute "na_reason" if any metric calculation failed, which can be used for diagnostics.
  
  For example, if `obj$output_metric = c("beta_delta", "recon_score")`, the returned list will have 
  two elements: `$beta_delta` (a Q-length vector) and `$recon_score` (a single value).
}
\description{
This function implements the core logic for the MS-ReVE analysis within a single
searchlight or region.
}
\examples{
# This example shows the structure of the returned list but doesn't actually run the function
# For a multi-metric model: output_metric = c("beta_delta", "recon_score", "beta_only")
# With 2 contrasts named "contrast1" and "contrast2", the return structure would be:
# 
# result <- list(
#   beta_delta = c(contrast1 = 0.23, contrast2 = -0.15),
#   recon_score = 0.72,
#   beta_only = c(contrast1 = 1.45, contrast2 = 0.88)
# )
#
# Accessing individual metrics:
# result$beta_delta["contrast1"]  # Value for first contrast's beta*delta
# result$recon_score              # Single value for reconstruction score

}
\keyword{internal}
